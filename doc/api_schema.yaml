swagger: '2.0'
info:
  title: Polemarch
  description: |2+

    ### Polemarch is ansible based service for orchestration infrastructure.

    * [Documentation](http://polemarch.readthedocs.io/)
    * [Issue Tracker](https://gitlab.com/vstconsulting/polemarch/issues)
    * [Source Code](https://gitlab.com/vstconsulting/polemarch)

  termsOfService: ''
  contact:
    name: System Administrator
  x-docs:
    has_docs: true
    docs_url: /docs/
  x-links:
    Request:
    - url: https://gitlab.com/vstconsulting/polemarch/issues/new?issuable_template%5D=Ask&issue%5Btitle%5D=Ask%20about%20version%203.0.3
      name: Question
    - url: https://gitlab.com/vstconsulting/polemarch/issues/new?issuable_template%5D=Bug&issue%5Btitle%5D=Bug%20in%20version%203.0.3
      name: Bug report
    - url: https://gitlab.com/vstconsulting/polemarch/issues/new?issuable_template%5D=Feature%20request&issue%5Btitle%5D=
      name: Feature request
    Documentation:
      url: http://polemarch.readthedocs.io/
      name: Official documentation
    Repository:
      url: https://gitlab.com/vstconsulting/polemarch.git
      name: Official repository
  x-menu:
  - name: Projects
    url: /project
    span_class: fas fa-cubes
  - name: Community
    url: /community_template
    span_class: fa fa-cloud
  - name: Inventories
    url: /inventory
    span_class: fa fa-folder
    sublinks:
    - name: Groups
      url: /group
      span_class: fas fa-server
    - name: Hosts
      url: /host
      span_class: fas fa-hdd
  - name: History
    url: /history
    span_class: fa fa-calendar
  - name: System
    span_class: fa fa-cog
    sublinks:
    - name: Users
      url: /user
      span_class: fa fa-user
    - name: Hooks
      url: /hook
      span_class: fa fa-plug
  x-page-limit: 20
  x-settings:
    static_path: /static/
    enable_gravatar: true
    time_zone: UTC
  x-subscriptions-prefix: polemarch.update
  x-versions:
    application: 3.0.3
    library: 3.0.3
    vstutils: 5.11.13
    django: 5.1.3
    djangorestframework: 3.15.2
    drf_yasg: 1.21.8
    fastapi: 0.115.5
    celery: 5.4.0
    ansible: 2.9.27
  version: v4
host: localhost:8080
schemes:
- http
basePath: /api/v4
consumes:
- application/json
- application/msgpack
produces:
- application/json
- application/msgpack
securityDefinitions:
  oauth2:
    type: oauth2
    flow: password
    tokenUrl: http://testserver/api/oauth2/token/
    scopes: {}
    x-clientId: simple-client-id
  session:
    type: apiKey
    name: sessionid
    in: cookie
  basic:
    type: basic
paths:
  /community_template/:
    get:
      operationId: community_template_list
      description: List of community project templates.
      parameters:
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: name
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Name
      - name: type
        in: query
        description: ''
        required: false
        type: string
        enum:
        - ''
        - GIT
        - TAR
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: name__not
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Exclude name
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - name
          - -name
          - type
          - -type
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/ProjectCommunityTemplate'
      tags:
      - community_template
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.ProjectCommunityTemplate
      x-list: true
    parameters: []
  /community_template/{id}/:
    get:
      operationId: community_template_get
      description: Return a community project template instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneProjectCommunityTemplate'
      tags:
      - community_template
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.ProjectCommunityTemplate
      x-list: false
    parameters:
    - name: id
      in: path
      description: A unique value identifying this project community template.
      required: true
      type: integer
  /community_template/{id}/use_it/:
    post:
      operationId: community_template_use_it
      description: Create a project based on current template.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ProjectCommunityTemplateUseIt'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/ProjectCommunityTemplateUseIt'
      tags:
      - community_template
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-title: Use it
      x-multiaction: false
    parameters:
    - name: id
      in: path
      description: A unique value identifying this project community template.
      required: true
      type: integer
  /group/:
    get:
      operationId: group_list
      description: Return all groups.
      parameters:
      - name: __deep_parent
        in: query
        required: false
        type: integer
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: name
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Name
      - name: variables
        in: query
        description: List of variables to filter. Comma separated "key:value" list.
        required: false
        type: string
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: name__not
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Exclude name
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - name
          - -name
          - children
          - -children
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Group'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Group
      x-deep-nested-view: groups
      x-list: true
    post:
      operationId: group_add
      description: Create a new group.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/CreateGroup'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/CreateGroup'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters: []
  /group/{id}/:
    get:
      operationId: group_get
      description: Return a group instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Group
      x-deep-nested-view: groups
      x-list: false
    put:
      operationId: group_update
      description: Update a group.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneGroup'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
    patch:
      operationId: group_edit
      description: Update one or more fields on an existing group.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneGroup'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
    delete:
      operationId: group_remove
      description: Remove an existing group.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this group.
      required: true
      type: integer
  /group/{id}/copy/:
    post:
      operationId: group_copy
      description: Endpoint which copy instance with deps.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Copy'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/Copy'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this group.
      required: true
      type: integer
  /group/{id}/groups/:
    get:
      operationId: group_groups_list
      description: Return all groups.
      parameters:
      - name: __deep_parent
        in: query
        required: false
        type: integer
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: name
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Name
      - name: variables
        in: query
        description: List of variables to filter. Comma separated "key:value" list.
        required: false
        type: string
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: name__not
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Exclude name
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - name
          - -name
          - children
          - -children
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Group'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Group
      x-list: true
    post:
      operationId: group_groups_add
      description: Create a new group.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/CreateGroup'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/CreateGroup'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-allow-append: true
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this group.
      required: true
      type: integer
  /group/{id}/groups/{groups_id}/:
    get:
      operationId: group_groups_get
      description: Return a group instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Group
      x-list: false
    put:
      operationId: group_groups_update
      description: Update a group.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneGroup'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
    patch:
      operationId: group_groups_edit
      description: Update one or more fields on an existing group.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneGroup'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
    delete:
      operationId: group_groups_remove
      description: Remove an existing group.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this group.
      required: true
      type: integer
    - name: groups_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this groups sublist.
  /group/{id}/groups/{groups_id}/copy/:
    post:
      operationId: group_groups_copy
      description: Endpoint which copy instance with deps.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Copy'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/Copy'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this group.
      required: true
      type: integer
    - name: groups_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this groups sublist.
  /group/{id}/groups/{groups_id}/hosts/:
    get:
      operationId: group_groups_hosts_list
      description: Return all hosts.
      parameters:
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: name
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Name
      - name: type
        in: query
        description: Instance type.
        required: false
        type: string
        enum:
        - ''
        - HOST
        - RANGE
      - name: variables
        in: query
        description: List of variables to filter. Comma separated "key:value" list.
        required: false
        type: string
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: name__not
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Exclude name
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - name
          - -name
          - type
          - -type
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Host'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Host
      x-list: true
    post:
      operationId: group_groups_hosts_add
      description: Create a new host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneHost'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/OneHost'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-allow-append: true
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this group.
      required: true
      type: integer
    - name: groups_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this groups sublist.
  /group/{id}/groups/{groups_id}/hosts/{hosts_id}/:
    get:
      operationId: group_groups_hosts_get
      description: Return a host instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHost'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Host
      x-list: false
    put:
      operationId: group_groups_hosts_update
      description: Update a host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneHost'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHost'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
    patch:
      operationId: group_groups_hosts_edit
      description: Update one or more fields on an existing host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneHost'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHost'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
    delete:
      operationId: group_groups_hosts_remove
      description: Remove an existing host.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this group.
      required: true
      type: integer
    - name: groups_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this groups sublist.
    - name: hosts_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this hosts sublist.
  /group/{id}/groups/{groups_id}/hosts/{hosts_id}/copy/:
    post:
      operationId: group_groups_hosts_groups_copy
      description: Endpoint which copy instance with deps.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Copy'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/Copy'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this group.
      required: true
      type: integer
    - name: groups_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this groups sublist.
    - name: hosts_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this hosts sublist.
  /group/{id}/groups/{groups_id}/hosts/{hosts_id}/set_owner/:
    patch:
      operationId: group_groups_hosts_groups_set_owner
      description: Change instance owner.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/SetOwner'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SetOwner'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-title: Set owner
      x-multiaction: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this group.
      required: true
      type: integer
    - name: groups_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this groups sublist.
    - name: hosts_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this hosts sublist.
  /group/{id}/groups/{groups_id}/hosts/{hosts_id}/variables/:
    get:
      operationId: group_groups_hosts_variables_list
      description: Return all variables of inventory host.
      parameters:
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: key
        in: query
        description: A key name string value (or comma separated list) of instance.
        required: false
        type: string
      - name: value
        in: query
        description: A value of instance.
        required: false
        type: string
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - key
          - -key
          - value
          - -value
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/InventoryVariable'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Variable
      x-list: true
    post:
      operationId: group_groups_hosts_variables_add
      description: Create a new variable of inventory host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-allow-append: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this group.
      required: true
      type: integer
    - name: groups_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this groups sublist.
    - name: hosts_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this hosts sublist.
  /group/{id}/groups/{groups_id}/hosts/{hosts_id}/variables/{variables_id}/:
    get:
      operationId: group_groups_hosts_variables_get
      description: Return a variable of inventory host.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Variable
      x-list: false
    put:
      operationId: group_groups_hosts_variables_update
      description: Update variable value.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
    patch:
      operationId: group_groups_hosts_variables_edit
      description: Update one or more fields on an existing variable.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
    delete:
      operationId: group_groups_hosts_variables_remove
      description: Remove an existing variable.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this group.
      required: true
      type: integer
    - name: groups_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this groups sublist.
    - name: hosts_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this hosts sublist.
    - name: variables_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this variables sublist.
  /group/{id}/groups/{groups_id}/set_owner/:
    patch:
      operationId: group_groups_set_owner
      description: Change instance owner.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/SetOwner'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SetOwner'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-title: Set owner
      x-multiaction: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this group.
      required: true
      type: integer
    - name: groups_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this groups sublist.
  /group/{id}/groups/{groups_id}/variables/:
    get:
      operationId: group_groups_variables_list
      description: Return all variables of inventory host.
      parameters:
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: key
        in: query
        description: A key name string value (or comma separated list) of instance.
        required: false
        type: string
      - name: value
        in: query
        description: A value of instance.
        required: false
        type: string
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - key
          - -key
          - value
          - -value
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/InventoryVariable'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Variable
      x-list: true
    post:
      operationId: group_groups_variables_add
      description: Create a new variable of inventory host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-allow-append: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this group.
      required: true
      type: integer
    - name: groups_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this groups sublist.
  /group/{id}/groups/{groups_id}/variables/{variables_id}/:
    get:
      operationId: group_groups_variables_get
      description: Return a variable of inventory host.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Variable
      x-list: false
    put:
      operationId: group_groups_variables_update
      description: Update variable value.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
    patch:
      operationId: group_groups_variables_edit
      description: Update one or more fields on an existing variable.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
    delete:
      operationId: group_groups_variables_remove
      description: Remove an existing variable.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this group.
      required: true
      type: integer
    - name: groups_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this groups sublist.
    - name: variables_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this variables sublist.
  /group/{id}/hosts/:
    get:
      operationId: group_hosts_list
      summary: Manage inventory hosts.
      description: |-
        retrieve:
                Return a host instance.

            list:
                Return all hosts.

            create:
                Create a new host.

            destroy:
                Remove an existing host.

            partial_update:
                Update one or more fields on an existing host.

            update:
                Update a host.
      parameters:
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: name
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Name
      - name: type
        in: query
        description: Instance type.
        required: false
        type: string
        enum:
        - ''
        - HOST
        - RANGE
      - name: variables
        in: query
        description: List of variables to filter. Comma separated "key:value" list.
        required: false
        type: string
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: name__not
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Exclude name
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - name
          - -name
          - type
          - -type
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Host'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Host
      x-list: true
    post:
      operationId: group_hosts_add
      summary: Manage inventory hosts.
      description: |-
        retrieve:
                Return a host instance.

            list:
                Return all hosts.

            create:
                Create a new host.

            destroy:
                Remove an existing host.

            partial_update:
                Update one or more fields on an existing host.

            update:
                Update a host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneHost'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/OneHost'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-allow-append: true
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this group.
      required: true
      type: integer
  /group/{id}/hosts/{hosts_id}/:
    get:
      operationId: group_hosts_get
      summary: Manage inventory hosts.
      description: |-
        retrieve:
                Return a host instance.

            list:
                Return all hosts.

            create:
                Create a new host.

            destroy:
                Remove an existing host.

            partial_update:
                Update one or more fields on an existing host.

            update:
                Update a host.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHost'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Host
      x-list: false
    put:
      operationId: group_hosts_update
      summary: Manage inventory hosts.
      description: |-
        retrieve:
                Return a host instance.

            list:
                Return all hosts.

            create:
                Create a new host.

            destroy:
                Remove an existing host.

            partial_update:
                Update one or more fields on an existing host.

            update:
                Update a host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneHost'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHost'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
    patch:
      operationId: group_hosts_edit
      summary: Manage inventory hosts.
      description: |-
        retrieve:
                Return a host instance.

            list:
                Return all hosts.

            create:
                Create a new host.

            destroy:
                Remove an existing host.

            partial_update:
                Update one or more fields on an existing host.

            update:
                Update a host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneHost'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHost'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
    delete:
      operationId: group_hosts_remove
      summary: Manage inventory hosts.
      description: |-
        retrieve:
                Return a host instance.

            list:
                Return all hosts.

            create:
                Create a new host.

            destroy:
                Remove an existing host.

            partial_update:
                Update one or more fields on an existing host.

            update:
                Update a host.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this group.
      required: true
      type: integer
    - name: hosts_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this hosts sublist.
  /group/{id}/hosts/{hosts_id}/copy/:
    post:
      operationId: group_hosts_copy
      summary: Manage inventory hosts.
      description: |-
        retrieve:
                Return a host instance.

            list:
                Return all hosts.

            create:
                Create a new host.

            destroy:
                Remove an existing host.

            partial_update:
                Update one or more fields on an existing host.

            update:
                Update a host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Copy'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/Copy'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this group.
      required: true
      type: integer
    - name: hosts_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this hosts sublist.
  /group/{id}/hosts/{hosts_id}/set_owner/:
    patch:
      operationId: group_hosts_set_owner
      description: Change instance owner.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/SetOwner'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SetOwner'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-title: Set owner
      x-multiaction: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this group.
      required: true
      type: integer
    - name: hosts_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this hosts sublist.
  /group/{id}/hosts/{hosts_id}/variables/:
    get:
      operationId: group_hosts_variables_list
      summary: Manage inventory hosts.
      description: |-
        retrieve:
                Return a host instance.

            list:
                Return all hosts.

            create:
                Create a new host.

            destroy:
                Remove an existing host.

            partial_update:
                Update one or more fields on an existing host.

            update:
                Update a host.
      parameters:
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: key
        in: query
        description: A key name string value (or comma separated list) of instance.
        required: false
        type: string
      - name: value
        in: query
        description: A value of instance.
        required: false
        type: string
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - key
          - -key
          - value
          - -value
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/InventoryVariable'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Variable
      x-list: true
    post:
      operationId: group_hosts_variables_add
      summary: Manage inventory hosts.
      description: |-
        retrieve:
                Return a host instance.

            list:
                Return all hosts.

            create:
                Create a new host.

            destroy:
                Remove an existing host.

            partial_update:
                Update one or more fields on an existing host.

            update:
                Update a host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-allow-append: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this group.
      required: true
      type: integer
    - name: hosts_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this hosts sublist.
  /group/{id}/hosts/{hosts_id}/variables/{variables_id}/:
    get:
      operationId: group_hosts_variables_get
      summary: Manage inventory hosts.
      description: |-
        retrieve:
                Return a host instance.

            list:
                Return all hosts.

            create:
                Create a new host.

            destroy:
                Remove an existing host.

            partial_update:
                Update one or more fields on an existing host.

            update:
                Update a host.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Variable
      x-list: false
    put:
      operationId: group_hosts_variables_update
      summary: Manage inventory hosts.
      description: |-
        retrieve:
                Return a host instance.

            list:
                Return all hosts.

            create:
                Create a new host.

            destroy:
                Remove an existing host.

            partial_update:
                Update one or more fields on an existing host.

            update:
                Update a host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
    patch:
      operationId: group_hosts_variables_edit
      summary: Manage inventory hosts.
      description: |-
        retrieve:
                Return a host instance.

            list:
                Return all hosts.

            create:
                Create a new host.

            destroy:
                Remove an existing host.

            partial_update:
                Update one or more fields on an existing host.

            update:
                Update a host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
    delete:
      operationId: group_hosts_variables_remove
      summary: Manage inventory hosts.
      description: |-
        retrieve:
                Return a host instance.

            list:
                Return all hosts.

            create:
                Create a new host.

            destroy:
                Remove an existing host.

            partial_update:
                Update one or more fields on an existing host.

            update:
                Update a host.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this group.
      required: true
      type: integer
    - name: hosts_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this hosts sublist.
    - name: variables_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this variables sublist.
  /group/{id}/set_owner/:
    patch:
      operationId: group_set_owner
      description: Change instance owner.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/SetOwner'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SetOwner'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-title: Set owner
      x-multiaction: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this group.
      required: true
      type: integer
  /group/{id}/variables/:
    get:
      operationId: group_variables_list
      summary: Inventory hosts variables.
      description: |-
        retrieve:
                Return a variable of inventory host.

            list:
                Return all variables of inventory host.

            create:
                Create a new variable of inventory host.

            destroy:
                Remove an existing variable.

            partial_update:
                Update one or more fields on an existing variable.

            update:
                Update variable value.
      parameters:
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: key
        in: query
        description: A key name string value (or comma separated list) of instance.
        required: false
        type: string
      - name: value
        in: query
        description: A value of instance.
        required: false
        type: string
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - key
          - -key
          - value
          - -value
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/InventoryVariable'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Variable
      x-list: true
    post:
      operationId: group_variables_add
      summary: Inventory hosts variables.
      description: |-
        retrieve:
                Return a variable of inventory host.

            list:
                Return all variables of inventory host.

            create:
                Create a new variable of inventory host.

            destroy:
                Remove an existing variable.

            partial_update:
                Update one or more fields on an existing variable.

            update:
                Update variable value.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-allow-append: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this group.
      required: true
      type: integer
  /group/{id}/variables/{variables_id}/:
    get:
      operationId: group_variables_get
      summary: Inventory hosts variables.
      description: |-
        retrieve:
                Return a variable of inventory host.

            list:
                Return all variables of inventory host.

            create:
                Create a new variable of inventory host.

            destroy:
                Remove an existing variable.

            partial_update:
                Update one or more fields on an existing variable.

            update:
                Update variable value.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Variable
      x-list: false
    put:
      operationId: group_variables_update
      summary: Inventory hosts variables.
      description: |-
        retrieve:
                Return a variable of inventory host.

            list:
                Return all variables of inventory host.

            create:
                Create a new variable of inventory host.

            destroy:
                Remove an existing variable.

            partial_update:
                Update one or more fields on an existing variable.

            update:
                Update variable value.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
    patch:
      operationId: group_variables_edit
      summary: Inventory hosts variables.
      description: |-
        retrieve:
                Return a variable of inventory host.

            list:
                Return all variables of inventory host.

            create:
                Create a new variable of inventory host.

            destroy:
                Remove an existing variable.

            partial_update:
                Update one or more fields on an existing variable.

            update:
                Update variable value.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
    delete:
      operationId: group_variables_remove
      summary: Inventory hosts variables.
      description: |-
        retrieve:
                Return a variable of inventory host.

            list:
                Return all variables of inventory host.

            create:
                Create a new variable of inventory host.

            destroy:
                Remove an existing variable.

            partial_update:
                Update one or more fields on an existing variable.

            update:
                Update variable value.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - group
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this group.
      required: true
      type: integer
    - name: variables_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this variables sublist.
  /history/:
    get:
      operationId: history_list
      description: Return all history instances of executions.
      parameters:
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: status
        in: query
        description: Status of execution.
        required: false
        type: string
        enum:
        - ''
        - DELAY
        - RUN
        - OK
        - ERROR
        - OFFLINE
        - INTERRUPTED
      - name: mode
        in: query
        description: Module or playbook name.
        required: false
        type: string
      - name: kind
        in: query
        description: Kind of execution.
        required: false
        type: string
      - name: older
        in: query
        description: Older then this time
        required: false
        type: string
      - name: newer
        in: query
        description: Newer then this time
        required: false
        type: string
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - start_time
          - -start_time
          - executor
          - -executor
          - initiator
          - -initiator
          - initiator_type
          - -initiator_type
          - project
          - -project
          - inventory
          - -inventory
          - kind
          - -kind
          - mode
          - -mode
          - status
          - -status
          - stop_time
          - -stop_time
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/History'
      tags:
      - history
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.History
      x-list: true
    parameters: []
  /history/{id}/:
    get:
      operationId: history_get
      description: Return an execution history instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHistory'
      tags:
      - history
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.History
      x-list: false
    delete:
      operationId: history_remove
      description: Remove an existing history record.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - history
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this history.
      required: true
      type: integer
  /history/{id}/cancel/:
    patch:
      operationId: history_cancel
      description: Cancel working task.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Empty'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response'
      tags:
      - history
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-title: Cancel
      x-multiaction: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this history.
      required: true
      type: integer
  /history/{id}/clear/:
    delete:
      operationId: history_clear
      description: Clear execution output.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - history
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-title: Clear
      x-multiaction: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this history.
      required: true
      type: integer
  /history/{id}/facts/:
    get:
      operationId: history_facts
      description: Get facts from "setup" ansible module execution.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FactsResponse'
      tags:
      - history
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.History
      x-list: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this history.
      required: true
      type: integer
  /hook/:
    get:
      operationId: hook_list
      description: Return all hooks.
      parameters:
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: name
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Name
      - name: when
        in: query
        description: ''
        required: false
        type: string
        enum:
        - ''
        - on_execution
        - after_execution
        - on_user_add
        - on_user_upd
        - on_user_del
        - on_object_add
        - on_object_upd
        - on_object_del
      - name: type
        in: query
        description: Instance type.
        required: false
        type: string
        enum:
        - ''
        - HTTP
        - SCRIPT
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: name__not
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Exclude name
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - name
          - -name
          - type
          - -type
          - when
          - -when
          - enable
          - -enable
          - recipients
          - -recipients
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Hook'
      tags:
      - hook
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Hook
      x-list: true
    post:
      operationId: hook_add
      description: Create a new hook.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneHook'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/OneHook'
      tags:
      - hook
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters: []
  /hook/{id}/:
    get:
      operationId: hook_get
      description: Return a hook instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHook'
      tags:
      - hook
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Hook
      x-list: false
    put:
      operationId: hook_update
      description: Update a hook.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneHook'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHook'
      tags:
      - hook
      security:
      - oauth2: []
      - session: []
      - basic: []
    patch:
      operationId: hook_edit
      description: Update one or more fields on an existing hook.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneHook'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHook'
      tags:
      - hook
      security:
      - oauth2: []
      - session: []
      - basic: []
    delete:
      operationId: hook_remove
      description: Remove an existing hook.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - hook
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this hook.
      required: true
      type: integer
  /host/:
    get:
      operationId: host_list
      description: Return all hosts.
      parameters:
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: name
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Name
      - name: type
        in: query
        description: Instance type.
        required: false
        type: string
        enum:
        - ''
        - HOST
        - RANGE
      - name: variables
        in: query
        description: List of variables to filter. Comma separated "key:value" list.
        required: false
        type: string
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: name__not
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Exclude name
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - name
          - -name
          - type
          - -type
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Host'
      tags:
      - host
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Host
      x-list: true
    post:
      operationId: host_add
      description: Create a new host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneHost'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/OneHost'
      tags:
      - host
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters: []
  /host/{id}/:
    get:
      operationId: host_get
      description: Return a host instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHost'
      tags:
      - host
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Host
      x-list: false
    put:
      operationId: host_update
      description: Update a host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneHost'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHost'
      tags:
      - host
      security:
      - oauth2: []
      - session: []
      - basic: []
    patch:
      operationId: host_edit
      description: Update one or more fields on an existing host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneHost'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHost'
      tags:
      - host
      security:
      - oauth2: []
      - session: []
      - basic: []
    delete:
      operationId: host_remove
      description: Remove an existing host.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - host
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this host.
      required: true
      type: integer
  /host/{id}/copy/:
    post:
      operationId: host_copy
      description: Endpoint which copy instance with deps.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Copy'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/Copy'
      tags:
      - host
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this host.
      required: true
      type: integer
  /host/{id}/set_owner/:
    patch:
      operationId: host_set_owner
      description: Change instance owner.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/SetOwner'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SetOwner'
      tags:
      - host
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-title: Set owner
      x-multiaction: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this host.
      required: true
      type: integer
  /host/{id}/variables/:
    get:
      operationId: host_variables_list
      summary: Inventory hosts variables.
      description: |-
        retrieve:
                Return a variable of inventory host.

            list:
                Return all variables of inventory host.

            create:
                Create a new variable of inventory host.

            destroy:
                Remove an existing variable.

            partial_update:
                Update one or more fields on an existing variable.

            update:
                Update variable value.
      parameters:
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: key
        in: query
        description: A key name string value (or comma separated list) of instance.
        required: false
        type: string
      - name: value
        in: query
        description: A value of instance.
        required: false
        type: string
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - key
          - -key
          - value
          - -value
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/InventoryVariable'
      tags:
      - host
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Variable
      x-list: true
    post:
      operationId: host_variables_add
      summary: Inventory hosts variables.
      description: |-
        retrieve:
                Return a variable of inventory host.

            list:
                Return all variables of inventory host.

            create:
                Create a new variable of inventory host.

            destroy:
                Remove an existing variable.

            partial_update:
                Update one or more fields on an existing variable.

            update:
                Update variable value.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - host
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-allow-append: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this host.
      required: true
      type: integer
  /host/{id}/variables/{variables_id}/:
    get:
      operationId: host_variables_get
      summary: Inventory hosts variables.
      description: |-
        retrieve:
                Return a variable of inventory host.

            list:
                Return all variables of inventory host.

            create:
                Create a new variable of inventory host.

            destroy:
                Remove an existing variable.

            partial_update:
                Update one or more fields on an existing variable.

            update:
                Update variable value.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - host
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Variable
      x-list: false
    put:
      operationId: host_variables_update
      summary: Inventory hosts variables.
      description: |-
        retrieve:
                Return a variable of inventory host.

            list:
                Return all variables of inventory host.

            create:
                Create a new variable of inventory host.

            destroy:
                Remove an existing variable.

            partial_update:
                Update one or more fields on an existing variable.

            update:
                Update variable value.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - host
      security:
      - oauth2: []
      - session: []
      - basic: []
    patch:
      operationId: host_variables_edit
      summary: Inventory hosts variables.
      description: |-
        retrieve:
                Return a variable of inventory host.

            list:
                Return all variables of inventory host.

            create:
                Create a new variable of inventory host.

            destroy:
                Remove an existing variable.

            partial_update:
                Update one or more fields on an existing variable.

            update:
                Update variable value.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - host
      security:
      - oauth2: []
      - session: []
      - basic: []
    delete:
      operationId: host_variables_remove
      summary: Inventory hosts variables.
      description: |-
        retrieve:
                Return a variable of inventory host.

            list:
                Return all variables of inventory host.

            create:
                Create a new variable of inventory host.

            destroy:
                Remove an existing variable.

            partial_update:
                Update one or more fields on an existing variable.

            update:
                Update variable value.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - host
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this host.
      required: true
      type: integer
    - name: variables_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this variables sublist.
  /inventory/:
    get:
      operationId: inventory_list
      description: Return all inventories.
      parameters:
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: name
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Name
      - name: variables
        in: query
        description: List of variables to filter. Comma separated "key:value" list.
        required: false
        type: string
      - name: plugin
        in: query
        description: ''
        required: false
        type: array
        items:
          type: string
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: name__not
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Exclude name
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - name
          - -name
          - plugin
          - -plugin
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Inventory'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Inventory
      x-list: true
    post:
      operationId: inventory_add
      description: Create a new inventory.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/CreateInventory'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/CreateInventory'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters: []
  /inventory/import_inventory/:
    post:
      operationId: inventory_import_inventory
      description: Import inventory from file.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ImportInventory'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/ImportInventory'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-title: Import inventory
      x-multiaction: false
    parameters: []
  /inventory/{id}/:
    get:
      operationId: inventory_get
      description: Return a inventory instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneInventory'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Inventory
      x-list: false
    put:
      operationId: inventory_update
      description: Update a inventory.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneInventory'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneInventory'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
    patch:
      operationId: inventory_edit
      description: Update one or more fields on an existing inventory.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneInventory'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneInventory'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
    delete:
      operationId: inventory_remove
      description: Remove an existing inventory.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this inventory.
      required: true
      type: integer
  /inventory/{id}/all_groups/:
    get:
      operationId: inventory_all_groups_list
      description: Return all groups.
      parameters:
      - name: __deep_parent
        in: query
        required: false
        type: integer
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: name
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Name
      - name: variables
        in: query
        description: List of variables to filter. Comma separated "key:value" list.
        required: false
        type: string
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: name__not
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Exclude name
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - name
          - -name
          - children
          - -children
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Group'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Group
      x-deep-nested-view: groups
      x-list: true
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this inventory.
      required: true
      type: integer
  /inventory/{id}/all_groups/{all_groups_id}/:
    get:
      operationId: inventory_all_groups_get
      description: Return a group instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Group
      x-deep-nested-view: groups
      x-list: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this inventory.
      required: true
      type: integer
    - name: all_groups_id
      in: path
      required: true
      type: string
  /inventory/{id}/all_hosts/:
    get:
      operationId: inventory_all_hosts_list
      summary: Manage inventory hosts.
      description: |-
        retrieve:
                Return a host instance.

            list:
                Return all hosts.

            create:
                Create a new host.

            destroy:
                Remove an existing host.

            partial_update:
                Update one or more fields on an existing host.

            update:
                Update a host.
      parameters:
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: name
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Name
      - name: type
        in: query
        description: Instance type.
        required: false
        type: string
        enum:
        - ''
        - HOST
        - RANGE
      - name: variables
        in: query
        description: List of variables to filter. Comma separated "key:value" list.
        required: false
        type: string
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: name__not
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Exclude name
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - name
          - -name
          - type
          - -type
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Host'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Host
      x-list: true
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this inventory.
      required: true
      type: integer
  /inventory/{id}/all_hosts/{all_hosts_id}/:
    get:
      operationId: inventory_all_hosts_get
      summary: Manage inventory hosts.
      description: |-
        retrieve:
                Return a host instance.

            list:
                Return all hosts.

            create:
                Create a new host.

            destroy:
                Remove an existing host.

            partial_update:
                Update one or more fields on an existing host.

            update:
                Update a host.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHost'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Host
      x-list: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this inventory.
      required: true
      type: integer
    - name: all_hosts_id
      in: path
      required: true
      type: string
  /inventory/{id}/copy/:
    post:
      operationId: inventory_copy
      description: Endpoint which copy instance with deps.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Copy'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/Copy'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this inventory.
      required: true
      type: integer
  /inventory/{id}/group/:
    get:
      operationId: inventory_group_list
      description: Return all groups.
      parameters:
      - name: __deep_parent
        in: query
        required: false
        type: integer
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: name
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Name
      - name: variables
        in: query
        description: List of variables to filter. Comma separated "key:value" list.
        required: false
        type: string
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: name__not
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Exclude name
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - name
          - -name
          - children
          - -children
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Group'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Group
      x-deep-nested-view: groups
      x-list: true
    post:
      operationId: inventory_group_add
      description: Create a new group.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/CreateGroup'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/CreateGroup'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-allow-append: true
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this inventory.
      required: true
      type: integer
  /inventory/{id}/group/{group_id}/:
    get:
      operationId: inventory_group_get
      description: Return a group instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Group
      x-deep-nested-view: groups
      x-list: false
    put:
      operationId: inventory_group_update
      description: Update a group.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneGroup'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
    patch:
      operationId: inventory_group_edit
      description: Update one or more fields on an existing group.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneGroup'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
    delete:
      operationId: inventory_group_remove
      description: Remove an existing group.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this inventory.
      required: true
      type: integer
    - name: group_id
      in: path
      required: true
      type: string
  /inventory/{id}/group/{group_id}/copy/:
    post:
      operationId: inventory_group_copy
      description: Endpoint which copy instance with deps.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Copy'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/Copy'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this inventory.
      required: true
      type: integer
    - name: group_id
      in: path
      required: true
      type: string
  /inventory/{id}/group/{group_id}/groups/:
    get:
      operationId: inventory_group_groups_list
      description: Return all groups.
      parameters:
      - name: __deep_parent
        in: query
        required: false
        type: integer
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: name
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Name
      - name: variables
        in: query
        description: List of variables to filter. Comma separated "key:value" list.
        required: false
        type: string
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: name__not
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Exclude name
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - name
          - -name
          - children
          - -children
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Group'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Group
      x-list: true
    post:
      operationId: inventory_group_groups_add
      description: Create a new group.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/CreateGroup'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/CreateGroup'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-allow-append: true
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this inventory.
      required: true
      type: integer
    - name: group_id
      in: path
      required: true
      type: string
  /inventory/{id}/group/{group_id}/groups/{groups_id}/:
    get:
      operationId: inventory_group_groups_get
      description: Return a group instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Group
      x-list: false
    put:
      operationId: inventory_group_groups_update
      description: Update a group.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneGroup'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
    patch:
      operationId: inventory_group_groups_edit
      description: Update one or more fields on an existing group.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneGroup'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
    delete:
      operationId: inventory_group_groups_remove
      description: Remove an existing group.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this inventory.
      required: true
      type: integer
    - name: group_id
      in: path
      required: true
      type: string
    - name: groups_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this groups sublist.
  /inventory/{id}/group/{group_id}/groups/{groups_id}/copy/:
    post:
      operationId: inventory_group_groups_group_copy
      description: Endpoint which copy instance with deps.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Copy'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/Copy'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this inventory.
      required: true
      type: integer
    - name: group_id
      in: path
      required: true
      type: string
    - name: groups_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this groups sublist.
  /inventory/{id}/group/{group_id}/groups/{groups_id}/hosts/:
    get:
      operationId: inventory_group_groups_hosts_list
      description: Return all hosts.
      parameters:
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: name
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Name
      - name: type
        in: query
        description: Instance type.
        required: false
        type: string
        enum:
        - ''
        - HOST
        - RANGE
      - name: variables
        in: query
        description: List of variables to filter. Comma separated "key:value" list.
        required: false
        type: string
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: name__not
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Exclude name
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - name
          - -name
          - type
          - -type
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Host'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Host
      x-list: true
    post:
      operationId: inventory_group_groups_hosts_add
      description: Create a new host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneHost'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/OneHost'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-allow-append: true
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this inventory.
      required: true
      type: integer
    - name: group_id
      in: path
      required: true
      type: string
    - name: groups_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this groups sublist.
  /inventory/{id}/group/{group_id}/groups/{groups_id}/hosts/{hosts_id}/:
    get:
      operationId: inventory_group_groups_hosts_get
      description: Return a host instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHost'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Host
      x-list: false
    put:
      operationId: inventory_group_groups_hosts_update
      description: Update a host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneHost'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHost'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
    patch:
      operationId: inventory_group_groups_hosts_edit
      description: Update one or more fields on an existing host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneHost'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHost'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
    delete:
      operationId: inventory_group_groups_hosts_remove
      description: Remove an existing host.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this inventory.
      required: true
      type: integer
    - name: group_id
      in: path
      required: true
      type: string
    - name: groups_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this groups sublist.
    - name: hosts_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this hosts sublist.
  /inventory/{id}/group/{group_id}/groups/{groups_id}/hosts/{hosts_id}/copy/:
    post:
      operationId: inventory_group_groups_hosts_group_groups_copy
      description: Endpoint which copy instance with deps.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Copy'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/Copy'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this inventory.
      required: true
      type: integer
    - name: group_id
      in: path
      required: true
      type: string
    - name: groups_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this groups sublist.
    - name: hosts_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this hosts sublist.
  /inventory/{id}/group/{group_id}/groups/{groups_id}/hosts/{hosts_id}/set_owner/:
    patch:
      operationId: inventory_group_groups_hosts_group_groups_set_owner
      description: Change instance owner.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/SetOwner'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SetOwner'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-title: Set owner
      x-multiaction: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this inventory.
      required: true
      type: integer
    - name: group_id
      in: path
      required: true
      type: string
    - name: groups_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this groups sublist.
    - name: hosts_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this hosts sublist.
  /inventory/{id}/group/{group_id}/groups/{groups_id}/hosts/{hosts_id}/variables/:
    get:
      operationId: inventory_group_groups_hosts_variables_list
      description: Return all variables of inventory host.
      parameters:
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: key
        in: query
        description: A key name string value (or comma separated list) of instance.
        required: false
        type: string
      - name: value
        in: query
        description: A value of instance.
        required: false
        type: string
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - key
          - -key
          - value
          - -value
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/InventoryVariable'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Variable
      x-list: true
    post:
      operationId: inventory_group_groups_hosts_variables_add
      description: Create a new variable of inventory host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-allow-append: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this inventory.
      required: true
      type: integer
    - name: group_id
      in: path
      required: true
      type: string
    - name: groups_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this groups sublist.
    - name: hosts_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this hosts sublist.
  /inventory/{id}/group/{group_id}/groups/{groups_id}/hosts/{hosts_id}/variables/{variables_id}/:
    get:
      operationId: inventory_group_groups_hosts_variables_get
      description: Return a variable of inventory host.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Variable
      x-list: false
    put:
      operationId: inventory_group_groups_hosts_variables_update
      description: Update variable value.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
    patch:
      operationId: inventory_group_groups_hosts_variables_edit
      description: Update one or more fields on an existing variable.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
    delete:
      operationId: inventory_group_groups_hosts_variables_remove
      description: Remove an existing variable.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this inventory.
      required: true
      type: integer
    - name: group_id
      in: path
      required: true
      type: string
    - name: groups_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this groups sublist.
    - name: hosts_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this hosts sublist.
    - name: variables_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this variables sublist.
  /inventory/{id}/group/{group_id}/groups/{groups_id}/set_owner/:
    patch:
      operationId: inventory_group_groups_group_set_owner
      description: Change instance owner.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/SetOwner'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SetOwner'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-title: Set owner
      x-multiaction: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this inventory.
      required: true
      type: integer
    - name: group_id
      in: path
      required: true
      type: string
    - name: groups_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this groups sublist.
  /inventory/{id}/group/{group_id}/groups/{groups_id}/variables/:
    get:
      operationId: inventory_group_groups_variables_list
      description: Return all variables of inventory host.
      parameters:
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: key
        in: query
        description: A key name string value (or comma separated list) of instance.
        required: false
        type: string
      - name: value
        in: query
        description: A value of instance.
        required: false
        type: string
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - key
          - -key
          - value
          - -value
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/InventoryVariable'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Variable
      x-list: true
    post:
      operationId: inventory_group_groups_variables_add
      description: Create a new variable of inventory host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-allow-append: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this inventory.
      required: true
      type: integer
    - name: group_id
      in: path
      required: true
      type: string
    - name: groups_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this groups sublist.
  /inventory/{id}/group/{group_id}/groups/{groups_id}/variables/{variables_id}/:
    get:
      operationId: inventory_group_groups_variables_get
      description: Return a variable of inventory host.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Variable
      x-list: false
    put:
      operationId: inventory_group_groups_variables_update
      description: Update variable value.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
    patch:
      operationId: inventory_group_groups_variables_edit
      description: Update one or more fields on an existing variable.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
    delete:
      operationId: inventory_group_groups_variables_remove
      description: Remove an existing variable.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this inventory.
      required: true
      type: integer
    - name: group_id
      in: path
      required: true
      type: string
    - name: groups_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this groups sublist.
    - name: variables_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this variables sublist.
  /inventory/{id}/group/{group_id}/hosts/:
    get:
      operationId: inventory_group_hosts_list
      description: Return all hosts.
      parameters:
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: name
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Name
      - name: type
        in: query
        description: Instance type.
        required: false
        type: string
        enum:
        - ''
        - HOST
        - RANGE
      - name: variables
        in: query
        description: List of variables to filter. Comma separated "key:value" list.
        required: false
        type: string
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: name__not
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Exclude name
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - name
          - -name
          - type
          - -type
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Host'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Host
      x-list: true
    post:
      operationId: inventory_group_hosts_add
      description: Create a new host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneHost'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/OneHost'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-allow-append: true
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this inventory.
      required: true
      type: integer
    - name: group_id
      in: path
      required: true
      type: string
  /inventory/{id}/group/{group_id}/hosts/{hosts_id}/:
    get:
      operationId: inventory_group_hosts_get
      description: Return a host instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHost'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Host
      x-list: false
    put:
      operationId: inventory_group_hosts_update
      description: Update a host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneHost'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHost'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
    patch:
      operationId: inventory_group_hosts_edit
      description: Update one or more fields on an existing host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneHost'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHost'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
    delete:
      operationId: inventory_group_hosts_remove
      description: Remove an existing host.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this inventory.
      required: true
      type: integer
    - name: group_id
      in: path
      required: true
      type: string
    - name: hosts_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this hosts sublist.
  /inventory/{id}/group/{group_id}/hosts/{hosts_id}/copy/:
    post:
      operationId: inventory_group_hosts_group_copy
      description: Endpoint which copy instance with deps.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Copy'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/Copy'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this inventory.
      required: true
      type: integer
    - name: group_id
      in: path
      required: true
      type: string
    - name: hosts_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this hosts sublist.
  /inventory/{id}/group/{group_id}/hosts/{hosts_id}/set_owner/:
    patch:
      operationId: inventory_group_hosts_group_set_owner
      description: Change instance owner.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/SetOwner'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SetOwner'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-title: Set owner
      x-multiaction: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this inventory.
      required: true
      type: integer
    - name: group_id
      in: path
      required: true
      type: string
    - name: hosts_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this hosts sublist.
  /inventory/{id}/group/{group_id}/hosts/{hosts_id}/variables/:
    get:
      operationId: inventory_group_hosts_variables_list
      description: Return all variables of inventory host.
      parameters:
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: key
        in: query
        description: A key name string value (or comma separated list) of instance.
        required: false
        type: string
      - name: value
        in: query
        description: A value of instance.
        required: false
        type: string
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - key
          - -key
          - value
          - -value
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/InventoryVariable'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Variable
      x-list: true
    post:
      operationId: inventory_group_hosts_variables_add
      description: Create a new variable of inventory host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-allow-append: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this inventory.
      required: true
      type: integer
    - name: group_id
      in: path
      required: true
      type: string
    - name: hosts_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this hosts sublist.
  /inventory/{id}/group/{group_id}/hosts/{hosts_id}/variables/{variables_id}/:
    get:
      operationId: inventory_group_hosts_variables_get
      description: Return a variable of inventory host.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Variable
      x-list: false
    put:
      operationId: inventory_group_hosts_variables_update
      description: Update variable value.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
    patch:
      operationId: inventory_group_hosts_variables_edit
      description: Update one or more fields on an existing variable.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
    delete:
      operationId: inventory_group_hosts_variables_remove
      description: Remove an existing variable.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this inventory.
      required: true
      type: integer
    - name: group_id
      in: path
      required: true
      type: string
    - name: hosts_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this hosts sublist.
    - name: variables_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this variables sublist.
  /inventory/{id}/group/{group_id}/set_owner/:
    patch:
      operationId: inventory_group_set_owner
      description: Change instance owner.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/SetOwner'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SetOwner'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-title: Set owner
      x-multiaction: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this inventory.
      required: true
      type: integer
    - name: group_id
      in: path
      required: true
      type: string
  /inventory/{id}/group/{group_id}/variables/:
    get:
      operationId: inventory_group_variables_list
      description: Return all variables of inventory host.
      parameters:
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: key
        in: query
        description: A key name string value (or comma separated list) of instance.
        required: false
        type: string
      - name: value
        in: query
        description: A value of instance.
        required: false
        type: string
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - key
          - -key
          - value
          - -value
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/InventoryVariable'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Variable
      x-list: true
    post:
      operationId: inventory_group_variables_add
      description: Create a new variable of inventory host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-allow-append: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this inventory.
      required: true
      type: integer
    - name: group_id
      in: path
      required: true
      type: string
  /inventory/{id}/group/{group_id}/variables/{variables_id}/:
    get:
      operationId: inventory_group_variables_get
      description: Return a variable of inventory host.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Variable
      x-list: false
    put:
      operationId: inventory_group_variables_update
      description: Update variable value.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
    patch:
      operationId: inventory_group_variables_edit
      description: Update one or more fields on an existing variable.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
    delete:
      operationId: inventory_group_variables_remove
      description: Remove an existing variable.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this inventory.
      required: true
      type: integer
    - name: group_id
      in: path
      required: true
      type: string
    - name: variables_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this variables sublist.
  /inventory/{id}/hosts/:
    get:
      operationId: inventory_hosts_list
      summary: Manage inventory hosts.
      description: |-
        retrieve:
                Return a host instance.

            list:
                Return all hosts.

            create:
                Create a new host.

            destroy:
                Remove an existing host.

            partial_update:
                Update one or more fields on an existing host.

            update:
                Update a host.
      parameters:
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: name
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Name
      - name: type
        in: query
        description: Instance type.
        required: false
        type: string
        enum:
        - ''
        - HOST
        - RANGE
      - name: variables
        in: query
        description: List of variables to filter. Comma separated "key:value" list.
        required: false
        type: string
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: name__not
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Exclude name
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - name
          - -name
          - type
          - -type
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Host'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Host
      x-list: true
    post:
      operationId: inventory_hosts_add
      summary: Manage inventory hosts.
      description: |-
        retrieve:
                Return a host instance.

            list:
                Return all hosts.

            create:
                Create a new host.

            destroy:
                Remove an existing host.

            partial_update:
                Update one or more fields on an existing host.

            update:
                Update a host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneHost'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/OneHost'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-allow-append: true
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this inventory.
      required: true
      type: integer
  /inventory/{id}/hosts/{hosts_id}/:
    get:
      operationId: inventory_hosts_get
      summary: Manage inventory hosts.
      description: |-
        retrieve:
                Return a host instance.

            list:
                Return all hosts.

            create:
                Create a new host.

            destroy:
                Remove an existing host.

            partial_update:
                Update one or more fields on an existing host.

            update:
                Update a host.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHost'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Host
      x-list: false
    put:
      operationId: inventory_hosts_update
      summary: Manage inventory hosts.
      description: |-
        retrieve:
                Return a host instance.

            list:
                Return all hosts.

            create:
                Create a new host.

            destroy:
                Remove an existing host.

            partial_update:
                Update one or more fields on an existing host.

            update:
                Update a host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneHost'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHost'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
    patch:
      operationId: inventory_hosts_edit
      summary: Manage inventory hosts.
      description: |-
        retrieve:
                Return a host instance.

            list:
                Return all hosts.

            create:
                Create a new host.

            destroy:
                Remove an existing host.

            partial_update:
                Update one or more fields on an existing host.

            update:
                Update a host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneHost'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHost'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
    delete:
      operationId: inventory_hosts_remove
      summary: Manage inventory hosts.
      description: |-
        retrieve:
                Return a host instance.

            list:
                Return all hosts.

            create:
                Create a new host.

            destroy:
                Remove an existing host.

            partial_update:
                Update one or more fields on an existing host.

            update:
                Update a host.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this inventory.
      required: true
      type: integer
    - name: hosts_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this hosts sublist.
  /inventory/{id}/hosts/{hosts_id}/copy/:
    post:
      operationId: inventory_hosts_copy
      summary: Manage inventory hosts.
      description: |-
        retrieve:
                Return a host instance.

            list:
                Return all hosts.

            create:
                Create a new host.

            destroy:
                Remove an existing host.

            partial_update:
                Update one or more fields on an existing host.

            update:
                Update a host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Copy'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/Copy'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this inventory.
      required: true
      type: integer
    - name: hosts_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this hosts sublist.
  /inventory/{id}/hosts/{hosts_id}/set_owner/:
    patch:
      operationId: inventory_hosts_set_owner
      description: Change instance owner.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/SetOwner'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SetOwner'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-title: Set owner
      x-multiaction: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this inventory.
      required: true
      type: integer
    - name: hosts_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this hosts sublist.
  /inventory/{id}/hosts/{hosts_id}/variables/:
    get:
      operationId: inventory_hosts_variables_list
      summary: Manage inventory hosts.
      description: |-
        retrieve:
                Return a host instance.

            list:
                Return all hosts.

            create:
                Create a new host.

            destroy:
                Remove an existing host.

            partial_update:
                Update one or more fields on an existing host.

            update:
                Update a host.
      parameters:
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: key
        in: query
        description: A key name string value (or comma separated list) of instance.
        required: false
        type: string
      - name: value
        in: query
        description: A value of instance.
        required: false
        type: string
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - key
          - -key
          - value
          - -value
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/InventoryVariable'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Variable
      x-list: true
    post:
      operationId: inventory_hosts_variables_add
      summary: Manage inventory hosts.
      description: |-
        retrieve:
                Return a host instance.

            list:
                Return all hosts.

            create:
                Create a new host.

            destroy:
                Remove an existing host.

            partial_update:
                Update one or more fields on an existing host.

            update:
                Update a host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-allow-append: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this inventory.
      required: true
      type: integer
    - name: hosts_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this hosts sublist.
  /inventory/{id}/hosts/{hosts_id}/variables/{variables_id}/:
    get:
      operationId: inventory_hosts_variables_get
      summary: Manage inventory hosts.
      description: |-
        retrieve:
                Return a host instance.

            list:
                Return all hosts.

            create:
                Create a new host.

            destroy:
                Remove an existing host.

            partial_update:
                Update one or more fields on an existing host.

            update:
                Update a host.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Variable
      x-list: false
    put:
      operationId: inventory_hosts_variables_update
      summary: Manage inventory hosts.
      description: |-
        retrieve:
                Return a host instance.

            list:
                Return all hosts.

            create:
                Create a new host.

            destroy:
                Remove an existing host.

            partial_update:
                Update one or more fields on an existing host.

            update:
                Update a host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
    patch:
      operationId: inventory_hosts_variables_edit
      summary: Manage inventory hosts.
      description: |-
        retrieve:
                Return a host instance.

            list:
                Return all hosts.

            create:
                Create a new host.

            destroy:
                Remove an existing host.

            partial_update:
                Update one or more fields on an existing host.

            update:
                Update a host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
    delete:
      operationId: inventory_hosts_variables_remove
      summary: Manage inventory hosts.
      description: |-
        retrieve:
                Return a host instance.

            list:
                Return all hosts.

            create:
                Create a new host.

            destroy:
                Remove an existing host.

            partial_update:
                Update one or more fields on an existing host.

            update:
                Update a host.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this inventory.
      required: true
      type: integer
    - name: hosts_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this hosts sublist.
    - name: variables_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this variables sublist.
  /inventory/{id}/set_owner/:
    patch:
      operationId: inventory_set_owner
      description: Change instance owner.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/SetOwner'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SetOwner'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-title: Set owner
      x-multiaction: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this inventory.
      required: true
      type: integer
  /inventory/{id}/state/:
    get:
      operationId: inventory_state_get
      description: State
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryState'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Inventory
      x-list: false
    put:
      operationId: inventory_state_update
      description: State
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryStateUpdate'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryState'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-multiaction: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this inventory.
      required: true
      type: integer
  /inventory/{id}/variables/:
    get:
      operationId: inventory_variables_list
      summary: Inventory hosts variables.
      description: |-
        retrieve:
                Return a variable of inventory host.

            list:
                Return all variables of inventory host.

            create:
                Create a new variable of inventory host.

            destroy:
                Remove an existing variable.

            partial_update:
                Update one or more fields on an existing variable.

            update:
                Update variable value.
      parameters:
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: key
        in: query
        description: A key name string value (or comma separated list) of instance.
        required: false
        type: string
      - name: value
        in: query
        description: A value of instance.
        required: false
        type: string
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - key
          - -key
          - value
          - -value
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/InventoryVariable'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Variable
      x-list: true
    post:
      operationId: inventory_variables_add
      summary: Inventory hosts variables.
      description: |-
        retrieve:
                Return a variable of inventory host.

            list:
                Return all variables of inventory host.

            create:
                Create a new variable of inventory host.

            destroy:
                Remove an existing variable.

            partial_update:
                Update one or more fields on an existing variable.

            update:
                Update variable value.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-allow-append: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this inventory.
      required: true
      type: integer
  /inventory/{id}/variables/{variables_id}/:
    get:
      operationId: inventory_variables_get
      summary: Inventory hosts variables.
      description: |-
        retrieve:
                Return a variable of inventory host.

            list:
                Return all variables of inventory host.

            create:
                Create a new variable of inventory host.

            destroy:
                Remove an existing variable.

            partial_update:
                Update one or more fields on an existing variable.

            update:
                Update variable value.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Variable
      x-list: false
    put:
      operationId: inventory_variables_update
      summary: Inventory hosts variables.
      description: |-
        retrieve:
                Return a variable of inventory host.

            list:
                Return all variables of inventory host.

            create:
                Create a new variable of inventory host.

            destroy:
                Remove an existing variable.

            partial_update:
                Update one or more fields on an existing variable.

            update:
                Update variable value.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
    patch:
      operationId: inventory_variables_edit
      summary: Inventory hosts variables.
      description: |-
        retrieve:
                Return a variable of inventory host.

            list:
                Return all variables of inventory host.

            create:
                Create a new variable of inventory host.

            destroy:
                Remove an existing variable.

            partial_update:
                Update one or more fields on an existing variable.

            update:
                Update variable value.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
    delete:
      operationId: inventory_variables_remove
      summary: Inventory hosts variables.
      description: |-
        retrieve:
                Return a variable of inventory host.

            list:
                Return all variables of inventory host.

            create:
                Create a new variable of inventory host.

            destroy:
                Remove an existing variable.

            partial_update:
                Update one or more fields on an existing variable.

            update:
                Update variable value.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - inventory
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this inventory.
      required: true
      type: integer
    - name: variables_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this variables sublist.
  /project/:
    get:
      operationId: project_list
      description: Return all projects.
      parameters:
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: name
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Name
      - name: status
        in: query
        description: Project sync status.
        required: false
        type: array
        items:
          type: string
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
      - name: status__not
        in: query
        description: Project sync status.
        required: false
        type: array
        items:
          type: string
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: name__not
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Exclude name
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - name
          - -name
          - status
          - -status
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Project'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Project
      x-list: true
    post:
      operationId: project_add
      description: Create a new project.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/CreateProject'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/CreateProject'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters: []
  /project/{id}/:
    get:
      operationId: project_get
      description: Return a project instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneProject'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Project
      x-list: false
    put:
      operationId: project_update
      description: Update a project.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneProject'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneProject'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    patch:
      operationId: project_edit
      description: Update one or more fields on an existing project.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneProject'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneProject'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    delete:
      operationId: project_remove
      description: Remove an existing project.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
  /project/{id}/_project_template_options/:
    get:
      operationId: project__template_options_list
      description: ExecutionTemplateOption(id, name, template, notes, arguments)
      parameters:
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: string
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: template
        in: query
        description: Search by template's primary key or name
        required: false
        type: string
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: string
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - template
          - -template
          - extended_name
          - -extended_name
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/ProjectTemplateOption'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.ExecutionTemplateOption
      x-list: true
      x-hidden: true
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
  /project/{id}/_project_template_options/{_project_template_options_id}/:
    get:
      operationId: project__template_options_get
      description: ExecutionTemplateOption(id, name, template, notes, arguments)
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneProjectTemplateOption'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.ExecutionTemplateOption
      x-list: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: _project_template_options_id
      in: path
      required: true
      type: string
  /project/{id}/ansible_modules/:
    get:
      operationId: project_ansible_modules_list
      summary: Ansible modules for project.
      description: |-
        retrieve:
                Return a module details of project instance.

            list:
                Return all available modules of project.
      parameters:
      - name: path
        in: query
        description: Full path to module.
        required: false
        type: string
      - name: path__not
        in: query
        description: Full path to module.
        required: false
        type: string
      - name: name
        in: query
        description: Full path to module.
        required: false
        type: string
      - name: name__not
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Exclude name
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - path
          - -path
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/AnsibleModule'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Module
      x-list: true
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
  /project/{id}/ansible_modules/{ansible_modules_id}/:
    get:
      operationId: project_ansible_modules_get
      summary: Ansible modules for project.
      description: |-
        retrieve:
                Return a module details of project instance.

            list:
                Return all available modules of project.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneAnsibleModule'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Module
      x-list: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: ansible_modules_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this ansible_modules
        sublist.
  /project/{id}/ansible_playbooks/:
    get:
      operationId: project_ansible_playbooks_list
      summary: Ansible playbooks for project.
      description: |-
        retrieve:
                Return a playbook of project instance.

            list:
                Return all playbooks of project.
      parameters:
      - name: playbook
        in: query
        description: Playbook filename.
        required: false
        type: string
      - name: playbook__not
        in: query
        description: Playbook filename.
        required: false
        type: string
      - name: pb_filter
        in: query
        description: Playbook filename - filter for prefetch.
        required: false
        type: string
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - name
          - -name
          - playbook
          - -playbook
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/AnsiblePlaybook'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.AnsiblePlaybook
      x-list: true
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
  /project/{id}/ansible_playbooks/{ansible_playbooks_id}/:
    get:
      operationId: project_ansible_playbooks_get
      summary: Ansible playbooks for project.
      description: |-
        retrieve:
                Return a playbook of project instance.

            list:
                Return all playbooks of project.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneAnsiblePlaybook'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.AnsiblePlaybook
      x-list: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: ansible_playbooks_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this ansible_playbooks
        sublist.
  /project/{id}/copy/:
    post:
      operationId: project_copy
      description: Endpoint which copy instance with deps.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Project'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/Project'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
  /project/{id}/execute_ansible_module/:
    post:
      operationId: project_execute_ansible_module
      description: Execute ANSIBLE_MODULE plugin.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ExecuteAnsibleModule'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/ProjectExecuteResponse'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-title: Execute ansible module
      x-multiaction: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
  /project/{id}/execute_ansible_playbook/:
    post:
      operationId: project_execute_ansible_playbook
      description: Execute ANSIBLE_PLAYBOOK plugin.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ExecuteAnsiblePlaybook'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/ProjectExecuteResponse'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-title: Execute ansible playbook
      x-multiaction: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
  /project/{id}/execution_templates/:
    get:
      operationId: project_execution_templates_list
      summary: Manage execution templates of project.
      description: |-
        retrieve:
                Return an execution template instance.

            list:
                Return all execution templates in project.

            create:
                Create a new execution template.

            destroy:
                Remove an existing execution template.

            partial_update:
                Update one or more fields on an existing execution template.

            update:
                Update an execution template.
      parameters:
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: name
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Name
      - name: plugin
        in: query
        description: ''
        required: false
        type: string
        enum:
        - ''
        - ANSIBLE_PLAYBOOK
        - ANSIBLE_MODULE
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: name__not
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Exclude name
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - name
          - -name
          - plugin
          - -plugin
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/ExecutionTemplate'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.ExecutionTemplate
      x-list: true
    post:
      operationId: project_execution_templates_add
      summary: Manage execution templates of project.
      description: |-
        retrieve:
                Return an execution template instance.

            list:
                Return all execution templates in project.

            create:
                Create a new execution template.

            destroy:
                Remove an existing execution template.

            partial_update:
                Update one or more fields on an existing execution template.

            update:
                Update an execution template.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/CreateExecutionTemplate'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/CreateExecutionTemplate'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-allow-append: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
  /project/{id}/execution_templates/{execution_templates_id}/:
    get:
      operationId: project_execution_templates_get
      summary: Manage execution templates of project.
      description: |-
        retrieve:
                Return an execution template instance.

            list:
                Return all execution templates in project.

            create:
                Create a new execution template.

            destroy:
                Remove an existing execution template.

            partial_update:
                Update one or more fields on an existing execution template.

            update:
                Update an execution template.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneExecutionTemplate'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.ExecutionTemplate
      x-list: false
    put:
      operationId: project_execution_templates_update
      summary: Manage execution templates of project.
      description: |-
        retrieve:
                Return an execution template instance.

            list:
                Return all execution templates in project.

            create:
                Create a new execution template.

            destroy:
                Remove an existing execution template.

            partial_update:
                Update one or more fields on an existing execution template.

            update:
                Update an execution template.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneExecutionTemplate'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneExecutionTemplate'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    patch:
      operationId: project_execution_templates_edit
      summary: Manage execution templates of project.
      description: |-
        retrieve:
                Return an execution template instance.

            list:
                Return all execution templates in project.

            create:
                Create a new execution template.

            destroy:
                Remove an existing execution template.

            partial_update:
                Update one or more fields on an existing execution template.

            update:
                Update an execution template.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneExecutionTemplate'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneExecutionTemplate'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    delete:
      operationId: project_execution_templates_remove
      summary: Manage execution templates of project.
      description: |-
        retrieve:
                Return an execution template instance.

            list:
                Return all execution templates in project.

            create:
                Create a new execution template.

            destroy:
                Remove an existing execution template.

            partial_update:
                Update one or more fields on an existing execution template.

            update:
                Update an execution template.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: execution_templates_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this execution_templates
        sublist.
  /project/{id}/execution_templates/{execution_templates_id}/execute/:
    post:
      operationId: project_execution_templates_execute
      description: Execute template with option.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ExecuteTemplate'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/ExecuteTemplateResponse'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-title: Execute
      x-multiaction: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: execution_templates_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this execution_templates
        sublist.
  /project/{id}/execution_templates/{execution_templates_id}/history/:
    get:
      operationId: project_execution_templates_history_list
      summary: Manage execution templates of project.
      description: |-
        retrieve:
                Return an execution template instance.

            list:
                Return all execution templates in project.

            create:
                Create a new execution template.

            destroy:
                Remove an existing execution template.

            partial_update:
                Update one or more fields on an existing execution template.

            update:
                Update an execution template.
      parameters:
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: status
        in: query
        description: Status of execution.
        required: false
        type: string
        enum:
        - ''
        - DELAY
        - RUN
        - OK
        - ERROR
        - OFFLINE
        - INTERRUPTED
      - name: mode
        in: query
        description: Module or playbook name.
        required: false
        type: string
      - name: kind
        in: query
        description: Kind of execution.
        required: false
        type: string
      - name: older
        in: query
        description: Older then this time
        required: false
        type: string
      - name: newer
        in: query
        description: Newer then this time
        required: false
        type: string
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - start_time
          - -start_time
          - executor
          - -executor
          - initiator
          - -initiator
          - initiator_type
          - -initiator_type
          - project
          - -project
          - inventory
          - -inventory
          - kind
          - -kind
          - mode
          - -mode
          - status
          - -status
          - stop_time
          - -stop_time
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/History'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.History
      x-list: true
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: execution_templates_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this execution_templates
        sublist.
  /project/{id}/execution_templates/{execution_templates_id}/history/{history_id}/:
    get:
      operationId: project_execution_templates_history_get
      summary: Manage execution templates of project.
      description: |-
        retrieve:
                Return an execution template instance.

            list:
                Return all execution templates in project.

            create:
                Create a new execution template.

            destroy:
                Remove an existing execution template.

            partial_update:
                Update one or more fields on an existing execution template.

            update:
                Update an execution template.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHistory'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.History
      x-list: false
    delete:
      operationId: project_execution_templates_history_remove
      summary: Manage execution templates of project.
      description: |-
        retrieve:
                Return an execution template instance.

            list:
                Return all execution templates in project.

            create:
                Create a new execution template.

            destroy:
                Remove an existing execution template.

            partial_update:
                Update one or more fields on an existing execution template.

            update:
                Update an execution template.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: execution_templates_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this execution_templates
        sublist.
    - name: history_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this history sublist.
  /project/{id}/execution_templates/{execution_templates_id}/history/{history_id}/cancel/:
    patch:
      operationId: project_execution_templates_history_execution_templates_cancel
      description: Cancel working task.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Empty'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-title: Cancel
      x-multiaction: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: execution_templates_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this execution_templates
        sublist.
    - name: history_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this history sublist.
  /project/{id}/execution_templates/{execution_templates_id}/history/{history_id}/clear/:
    delete:
      operationId: project_execution_templates_history_execution_templates_clear
      description: Clear execution output.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-title: Clear
      x-multiaction: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: execution_templates_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this execution_templates
        sublist.
    - name: history_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this history sublist.
  /project/{id}/execution_templates/{execution_templates_id}/history/{history_id}/facts/:
    get:
      operationId: project_execution_templates_history_execution_templates_facts
      description: Get facts from "setup" ansible module execution.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FactsResponse'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.History
      x-list: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: execution_templates_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this execution_templates
        sublist.
    - name: history_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this history sublist.
  /project/{id}/execution_templates/{execution_templates_id}/options/:
    get:
      operationId: project_execution_templates_options_list
      summary: Manage execution templates of project.
      description: |-
        retrieve:
                Return an execution template instance.

            list:
                Return all execution templates in project.

            create:
                Create a new execution template.

            destroy:
                Remove an existing execution template.

            partial_update:
                Update one or more fields on an existing execution template.

            update:
                Update an execution template.
      parameters:
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: string
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: name
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Name
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: string
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: name__not
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Exclude name
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - name
          - -name
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/ExecutionTemplateOption'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.ExecutionTemplateOption
      x-list: true
    post:
      operationId: project_execution_templates_options_add
      summary: Manage execution templates of project.
      description: |-
        retrieve:
                Return an execution template instance.

            list:
                Return all execution templates in project.

            create:
                Create a new execution template.

            destroy:
                Remove an existing execution template.

            partial_update:
                Update one or more fields on an existing execution template.

            update:
                Update an execution template.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneExecutionTemplateOption'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/OneExecutionTemplateOption'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-allow-append: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: execution_templates_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this execution_templates
        sublist.
  /project/{id}/execution_templates/{execution_templates_id}/options/{options_id}/:
    get:
      operationId: project_execution_templates_options_get
      summary: Manage execution templates of project.
      description: |-
        retrieve:
                Return an execution template instance.

            list:
                Return all execution templates in project.

            create:
                Create a new execution template.

            destroy:
                Remove an existing execution template.

            partial_update:
                Update one or more fields on an existing execution template.

            update:
                Update an execution template.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneExecutionTemplateOption'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.ExecutionTemplateOption
      x-list: false
    put:
      operationId: project_execution_templates_options_update
      summary: Manage execution templates of project.
      description: |-
        retrieve:
                Return an execution template instance.

            list:
                Return all execution templates in project.

            create:
                Create a new execution template.

            destroy:
                Remove an existing execution template.

            partial_update:
                Update one or more fields on an existing execution template.

            update:
                Update an execution template.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneExecutionTemplateOption'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneExecutionTemplateOption'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    patch:
      operationId: project_execution_templates_options_edit
      summary: Manage execution templates of project.
      description: |-
        retrieve:
                Return an execution template instance.

            list:
                Return all execution templates in project.

            create:
                Create a new execution template.

            destroy:
                Remove an existing execution template.

            partial_update:
                Update one or more fields on an existing execution template.

            update:
                Update an execution template.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneExecutionTemplateOption'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneExecutionTemplateOption'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    delete:
      operationId: project_execution_templates_options_remove
      summary: Manage execution templates of project.
      description: |-
        retrieve:
                Return an execution template instance.

            list:
                Return all execution templates in project.

            create:
                Create a new execution template.

            destroy:
                Remove an existing execution template.

            partial_update:
                Update one or more fields on an existing execution template.

            update:
                Update an execution template.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: execution_templates_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this execution_templates
        sublist.
    - name: options_id
      in: path
      required: true
      type: string
  /project/{id}/execution_templates/{execution_templates_id}/options/{options_id}/execute/:
    post:
      operationId: project_execution_templates_options_execution_templates_execute
      description: Execute template with option.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Empty'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/ExecuteTemplateResponse'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-title: Execute
      x-multiaction: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: execution_templates_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this execution_templates
        sublist.
    - name: options_id
      in: path
      required: true
      type: string
  /project/{id}/execution_templates/{execution_templates_id}/options/{options_id}/periodic_tasks/:
    get:
      operationId: project_execution_templates_options_periodic_tasks_list
      summary: Manage execution templates of project.
      description: |-
        retrieve:
                Return an execution template instance.

            list:
                Return all execution templates in project.

            create:
                Create a new execution template.

            destroy:
                Remove an existing execution template.

            partial_update:
                Update one or more fields on an existing execution template.

            update:
                Update an execution template.
      parameters:
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: name
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Name
      - name: schedule
        in: query
        description: ''
        required: false
        type: string
      - name: enabled
        in: query
        description: ''
        required: false
        type: boolean
      - name: save_result
        in: query
        description: ''
        required: false
        type: boolean
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: name__not
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Exclude name
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - name
          - -name
          - schedule
          - -schedule
          - enabled
          - -enabled
          - save_result
          - -save_result
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/TemplatePeriodicTask'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.TemplatePeriodicTask
      x-list: true
    post:
      operationId: project_execution_templates_options_periodic_tasks_add
      summary: Manage execution templates of project.
      description: |-
        retrieve:
                Return an execution template instance.

            list:
                Return all execution templates in project.

            create:
                Create a new execution template.

            destroy:
                Remove an existing execution template.

            partial_update:
                Update one or more fields on an existing execution template.

            update:
                Update an execution template.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneTemplatePeriodicTask'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/OneTemplatePeriodicTask'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-allow-append: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: execution_templates_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this execution_templates
        sublist.
    - name: options_id
      in: path
      required: true
      type: string
  /project/{id}/execution_templates/{execution_templates_id}/options/{options_id}/periodic_tasks/{periodic_tasks_id}/:
    get:
      operationId: project_execution_templates_options_periodic_tasks_get
      summary: Manage execution templates of project.
      description: |-
        retrieve:
                Return an execution template instance.

            list:
                Return all execution templates in project.

            create:
                Create a new execution template.

            destroy:
                Remove an existing execution template.

            partial_update:
                Update one or more fields on an existing execution template.

            update:
                Update an execution template.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneTemplatePeriodicTask'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.TemplatePeriodicTask
      x-list: false
    put:
      operationId: project_execution_templates_options_periodic_tasks_update
      summary: Manage execution templates of project.
      description: |-
        retrieve:
                Return an execution template instance.

            list:
                Return all execution templates in project.

            create:
                Create a new execution template.

            destroy:
                Remove an existing execution template.

            partial_update:
                Update one or more fields on an existing execution template.

            update:
                Update an execution template.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneTemplatePeriodicTask'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneTemplatePeriodicTask'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    patch:
      operationId: project_execution_templates_options_periodic_tasks_edit
      summary: Manage execution templates of project.
      description: |-
        retrieve:
                Return an execution template instance.

            list:
                Return all execution templates in project.

            create:
                Create a new execution template.

            destroy:
                Remove an existing execution template.

            partial_update:
                Update one or more fields on an existing execution template.

            update:
                Update an execution template.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneTemplatePeriodicTask'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneTemplatePeriodicTask'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    delete:
      operationId: project_execution_templates_options_periodic_tasks_remove
      summary: Manage execution templates of project.
      description: |-
        retrieve:
                Return an execution template instance.

            list:
                Return all execution templates in project.

            create:
                Create a new execution template.

            destroy:
                Remove an existing execution template.

            partial_update:
                Update one or more fields on an existing execution template.

            update:
                Update an execution template.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: execution_templates_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this execution_templates
        sublist.
    - name: options_id
      in: path
      required: true
      type: string
    - name: periodic_tasks_id
      in: path
      required: true
      type: string
  /project/{id}/history/:
    get:
      operationId: project_history_list
      summary: View previous executions.
      description: |-
        retrieve:
                Return an execution history instance.

            list:
                Return all history instances of executions.

            destroy:
                Remove an existing history record.
      parameters:
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: status
        in: query
        description: Status of execution.
        required: false
        type: string
        enum:
        - ''
        - DELAY
        - RUN
        - OK
        - ERROR
        - OFFLINE
        - INTERRUPTED
      - name: mode
        in: query
        description: Module or playbook name.
        required: false
        type: string
      - name: kind
        in: query
        description: Kind of execution.
        required: false
        type: string
      - name: older
        in: query
        description: Older then this time
        required: false
        type: string
      - name: newer
        in: query
        description: Newer then this time
        required: false
        type: string
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - start_time
          - -start_time
          - executor
          - -executor
          - initiator
          - -initiator
          - initiator_type
          - -initiator_type
          - project
          - -project
          - inventory
          - -inventory
          - kind
          - -kind
          - mode
          - -mode
          - status
          - -status
          - stop_time
          - -stop_time
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/History'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.History
      x-list: true
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
  /project/{id}/history/{history_id}/:
    get:
      operationId: project_history_get
      summary: View previous executions.
      description: |-
        retrieve:
                Return an execution history instance.

            list:
                Return all history instances of executions.

            destroy:
                Remove an existing history record.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHistory'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.History
      x-list: false
    delete:
      operationId: project_history_remove
      summary: View previous executions.
      description: |-
        retrieve:
                Return an execution history instance.

            list:
                Return all history instances of executions.

            destroy:
                Remove an existing history record.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: history_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this history sublist.
  /project/{id}/history/{history_id}/cancel/:
    patch:
      operationId: project_history_cancel
      description: Cancel working task.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Empty'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-title: Cancel
      x-multiaction: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: history_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this history sublist.
  /project/{id}/history/{history_id}/clear/:
    delete:
      operationId: project_history_clear
      description: Clear execution output.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-title: Clear
      x-multiaction: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: history_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this history sublist.
  /project/{id}/history/{history_id}/facts/:
    get:
      operationId: project_history_facts
      description: Get facts from "setup" ansible module execution.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FactsResponse'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.History
      x-list: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: history_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this history sublist.
  /project/{id}/inventory/:
    get:
      operationId: project_inventory_list
      description: Inventory(id, hidden, notes, owner, name, plugin, _inventory_state)
      parameters:
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: name
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Name
      - name: variables
        in: query
        description: List of variables to filter. Comma separated "key:value" list.
        required: false
        type: string
      - name: plugin
        in: query
        description: ''
        required: false
        type: array
        items:
          type: string
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: name__not
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Exclude name
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - name
          - -name
          - plugin
          - -plugin
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Inventory'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Inventory
      x-list: true
    post:
      operationId: project_inventory_add
      description: Inventory(id, hidden, notes, owner, name, plugin, _inventory_state)
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/CreateInventory'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/CreateInventory'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-allow-append: true
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
  /project/{id}/inventory/import_inventory/:
    post:
      operationId: project_inventory_import_inventory
      description: Import inventory from file.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ProjectImportInventory'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/ProjectImportInventory'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-title: Import inventory
      x-multiaction: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
  /project/{id}/inventory/{inventory_id}/:
    get:
      operationId: project_inventory_get
      description: Inventory(id, hidden, notes, owner, name, plugin, _inventory_state)
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneInventory'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Inventory
      x-list: false
    put:
      operationId: project_inventory_update
      description: Inventory(id, hidden, notes, owner, name, plugin, _inventory_state)
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneInventory'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneInventory'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    patch:
      operationId: project_inventory_edit
      description: Inventory(id, hidden, notes, owner, name, plugin, _inventory_state)
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneInventory'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneInventory'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    delete:
      operationId: project_inventory_remove
      description: Inventory(id, hidden, notes, owner, name, plugin, _inventory_state)
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: inventory_id
      in: path
      required: true
      type: string
  /project/{id}/inventory/{inventory_id}/all_groups/:
    get:
      operationId: project_inventory_all_groups_list
      description: Return all groups.
      parameters:
      - name: __deep_parent
        in: query
        required: false
        type: integer
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: name
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Name
      - name: variables
        in: query
        description: List of variables to filter. Comma separated "key:value" list.
        required: false
        type: string
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: name__not
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Exclude name
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - name
          - -name
          - children
          - -children
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Group'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Group
      x-deep-nested-view: groups
      x-list: true
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: inventory_id
      in: path
      required: true
      type: string
  /project/{id}/inventory/{inventory_id}/all_groups/{all_groups_id}/:
    get:
      operationId: project_inventory_all_groups_get
      description: Return a group instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Group
      x-deep-nested-view: groups
      x-list: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: inventory_id
      in: path
      required: true
      type: string
    - name: all_groups_id
      in: path
      required: true
      type: string
  /project/{id}/inventory/{inventory_id}/all_hosts/:
    get:
      operationId: project_inventory_all_hosts_list
      description: Return all hosts.
      parameters:
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: name
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Name
      - name: type
        in: query
        description: Instance type.
        required: false
        type: string
        enum:
        - ''
        - HOST
        - RANGE
      - name: variables
        in: query
        description: List of variables to filter. Comma separated "key:value" list.
        required: false
        type: string
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: name__not
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Exclude name
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - name
          - -name
          - type
          - -type
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Host'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Host
      x-list: true
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: inventory_id
      in: path
      required: true
      type: string
  /project/{id}/inventory/{inventory_id}/all_hosts/{all_hosts_id}/:
    get:
      operationId: project_inventory_all_hosts_get
      description: Return a host instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHost'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Host
      x-list: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: inventory_id
      in: path
      required: true
      type: string
    - name: all_hosts_id
      in: path
      required: true
      type: string
  /project/{id}/inventory/{inventory_id}/copy/:
    post:
      operationId: project_inventory_copy
      description: Endpoint which copy instance with deps.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Copy'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/Copy'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: inventory_id
      in: path
      required: true
      type: string
  /project/{id}/inventory/{inventory_id}/group/:
    get:
      operationId: project_inventory_group_list
      description: Return all groups.
      parameters:
      - name: __deep_parent
        in: query
        required: false
        type: integer
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: name
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Name
      - name: variables
        in: query
        description: List of variables to filter. Comma separated "key:value" list.
        required: false
        type: string
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: name__not
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Exclude name
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - name
          - -name
          - children
          - -children
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Group'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Group
      x-deep-nested-view: groups
      x-list: true
    post:
      operationId: project_inventory_group_add
      description: Create a new group.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/CreateGroup'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/CreateGroup'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-allow-append: true
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: inventory_id
      in: path
      required: true
      type: string
  /project/{id}/inventory/{inventory_id}/group/{group_id}/:
    get:
      operationId: project_inventory_group_get
      description: Return a group instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Group
      x-deep-nested-view: groups
      x-list: false
    put:
      operationId: project_inventory_group_update
      description: Update a group.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneGroup'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    patch:
      operationId: project_inventory_group_edit
      description: Update one or more fields on an existing group.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneGroup'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    delete:
      operationId: project_inventory_group_remove
      description: Remove an existing group.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: inventory_id
      in: path
      required: true
      type: string
    - name: group_id
      in: path
      required: true
      type: string
  /project/{id}/inventory/{inventory_id}/group/{group_id}/copy/:
    post:
      operationId: project_inventory_group_inventory_copy
      description: Endpoint which copy instance with deps.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Copy'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/Copy'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: inventory_id
      in: path
      required: true
      type: string
    - name: group_id
      in: path
      required: true
      type: string
  /project/{id}/inventory/{inventory_id}/group/{group_id}/groups/:
    get:
      operationId: project_inventory_group_groups_list
      description: Return all groups.
      parameters:
      - name: __deep_parent
        in: query
        required: false
        type: integer
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: name
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Name
      - name: variables
        in: query
        description: List of variables to filter. Comma separated "key:value" list.
        required: false
        type: string
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: name__not
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Exclude name
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - name
          - -name
          - children
          - -children
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Group'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Group
      x-list: true
    post:
      operationId: project_inventory_group_groups_add
      description: Create a new group.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/CreateGroup'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/CreateGroup'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-allow-append: true
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: inventory_id
      in: path
      required: true
      type: string
    - name: group_id
      in: path
      required: true
      type: string
  /project/{id}/inventory/{inventory_id}/group/{group_id}/groups/{groups_id}/:
    get:
      operationId: project_inventory_group_groups_get
      description: Return a group instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Group
      x-list: false
    put:
      operationId: project_inventory_group_groups_update
      description: Update a group.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneGroup'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    patch:
      operationId: project_inventory_group_groups_edit
      description: Update one or more fields on an existing group.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneGroup'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneGroup'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    delete:
      operationId: project_inventory_group_groups_remove
      description: Remove an existing group.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: inventory_id
      in: path
      required: true
      type: string
    - name: group_id
      in: path
      required: true
      type: string
    - name: groups_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this groups sublist.
  /project/{id}/inventory/{inventory_id}/group/{group_id}/groups/{groups_id}/copy/:
    post:
      operationId: project_inventory_group_groups_inventory_group_copy
      description: Endpoint which copy instance with deps.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Copy'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/Copy'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: inventory_id
      in: path
      required: true
      type: string
    - name: group_id
      in: path
      required: true
      type: string
    - name: groups_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this groups sublist.
  /project/{id}/inventory/{inventory_id}/group/{group_id}/groups/{groups_id}/hosts/:
    get:
      operationId: project_inventory_group_groups_hosts_list
      description: Return all hosts.
      parameters:
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: name
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Name
      - name: type
        in: query
        description: Instance type.
        required: false
        type: string
        enum:
        - ''
        - HOST
        - RANGE
      - name: variables
        in: query
        description: List of variables to filter. Comma separated "key:value" list.
        required: false
        type: string
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: name__not
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Exclude name
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - name
          - -name
          - type
          - -type
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Host'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Host
      x-list: true
    post:
      operationId: project_inventory_group_groups_hosts_add
      description: Create a new host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneHost'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/OneHost'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-allow-append: true
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: inventory_id
      in: path
      required: true
      type: string
    - name: group_id
      in: path
      required: true
      type: string
    - name: groups_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this groups sublist.
  /project/{id}/inventory/{inventory_id}/group/{group_id}/groups/{groups_id}/hosts/{hosts_id}/:
    get:
      operationId: project_inventory_group_groups_hosts_get
      description: Return a host instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHost'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Host
      x-list: false
    put:
      operationId: project_inventory_group_groups_hosts_update
      description: Update a host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneHost'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHost'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    patch:
      operationId: project_inventory_group_groups_hosts_edit
      description: Update one or more fields on an existing host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneHost'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHost'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    delete:
      operationId: project_inventory_group_groups_hosts_remove
      description: Remove an existing host.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: inventory_id
      in: path
      required: true
      type: string
    - name: group_id
      in: path
      required: true
      type: string
    - name: groups_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this groups sublist.
    - name: hosts_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this hosts sublist.
  /project/{id}/inventory/{inventory_id}/group/{group_id}/groups/{groups_id}/hosts/{hosts_id}/copy/:
    post:
      operationId: project_inventory_group_groups_hosts_inventory_group_groups_copy
      description: Endpoint which copy instance with deps.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Copy'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/Copy'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: inventory_id
      in: path
      required: true
      type: string
    - name: group_id
      in: path
      required: true
      type: string
    - name: groups_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this groups sublist.
    - name: hosts_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this hosts sublist.
  /project/{id}/inventory/{inventory_id}/group/{group_id}/groups/{groups_id}/hosts/{hosts_id}/set_owner/:
    patch:
      operationId: project_inventory_group_groups_hosts_inventory_group_groups_set_owner
      description: Change instance owner.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/SetOwner'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SetOwner'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-title: Set owner
      x-multiaction: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: inventory_id
      in: path
      required: true
      type: string
    - name: group_id
      in: path
      required: true
      type: string
    - name: groups_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this groups sublist.
    - name: hosts_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this hosts sublist.
  /project/{id}/inventory/{inventory_id}/group/{group_id}/groups/{groups_id}/hosts/{hosts_id}/variables/:
    get:
      operationId: project_inventory_group_groups_hosts_variables_list
      description: Return all variables of inventory host.
      parameters:
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: key
        in: query
        description: A key name string value (or comma separated list) of instance.
        required: false
        type: string
      - name: value
        in: query
        description: A value of instance.
        required: false
        type: string
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - key
          - -key
          - value
          - -value
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/InventoryVariable'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Variable
      x-list: true
    post:
      operationId: project_inventory_group_groups_hosts_variables_add
      description: Create a new variable of inventory host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-allow-append: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: inventory_id
      in: path
      required: true
      type: string
    - name: group_id
      in: path
      required: true
      type: string
    - name: groups_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this groups sublist.
    - name: hosts_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this hosts sublist.
  /project/{id}/inventory/{inventory_id}/group/{group_id}/groups/{groups_id}/hosts/{hosts_id}/variables/{variables_id}/:
    get:
      operationId: project_inventory_group_groups_hosts_variables_get
      description: Return a variable of inventory host.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Variable
      x-list: false
    put:
      operationId: project_inventory_group_groups_hosts_variables_update
      description: Update variable value.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    patch:
      operationId: project_inventory_group_groups_hosts_variables_edit
      description: Update one or more fields on an existing variable.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    delete:
      operationId: project_inventory_group_groups_hosts_variables_remove
      description: Remove an existing variable.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: inventory_id
      in: path
      required: true
      type: string
    - name: group_id
      in: path
      required: true
      type: string
    - name: groups_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this groups sublist.
    - name: hosts_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this hosts sublist.
    - name: variables_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this variables sublist.
  /project/{id}/inventory/{inventory_id}/group/{group_id}/groups/{groups_id}/set_owner/:
    patch:
      operationId: project_inventory_group_groups_inventory_group_set_owner
      description: Change instance owner.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/SetOwner'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SetOwner'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-title: Set owner
      x-multiaction: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: inventory_id
      in: path
      required: true
      type: string
    - name: group_id
      in: path
      required: true
      type: string
    - name: groups_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this groups sublist.
  /project/{id}/inventory/{inventory_id}/group/{group_id}/groups/{groups_id}/variables/:
    get:
      operationId: project_inventory_group_groups_variables_list
      description: Return all variables of inventory host.
      parameters:
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: key
        in: query
        description: A key name string value (or comma separated list) of instance.
        required: false
        type: string
      - name: value
        in: query
        description: A value of instance.
        required: false
        type: string
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - key
          - -key
          - value
          - -value
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/InventoryVariable'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Variable
      x-list: true
    post:
      operationId: project_inventory_group_groups_variables_add
      description: Create a new variable of inventory host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-allow-append: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: inventory_id
      in: path
      required: true
      type: string
    - name: group_id
      in: path
      required: true
      type: string
    - name: groups_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this groups sublist.
  /project/{id}/inventory/{inventory_id}/group/{group_id}/groups/{groups_id}/variables/{variables_id}/:
    get:
      operationId: project_inventory_group_groups_variables_get
      description: Return a variable of inventory host.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Variable
      x-list: false
    put:
      operationId: project_inventory_group_groups_variables_update
      description: Update variable value.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    patch:
      operationId: project_inventory_group_groups_variables_edit
      description: Update one or more fields on an existing variable.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    delete:
      operationId: project_inventory_group_groups_variables_remove
      description: Remove an existing variable.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: inventory_id
      in: path
      required: true
      type: string
    - name: group_id
      in: path
      required: true
      type: string
    - name: groups_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this groups sublist.
    - name: variables_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this variables sublist.
  /project/{id}/inventory/{inventory_id}/group/{group_id}/hosts/:
    get:
      operationId: project_inventory_group_hosts_list
      description: Return all hosts.
      parameters:
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: name
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Name
      - name: type
        in: query
        description: Instance type.
        required: false
        type: string
        enum:
        - ''
        - HOST
        - RANGE
      - name: variables
        in: query
        description: List of variables to filter. Comma separated "key:value" list.
        required: false
        type: string
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: name__not
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Exclude name
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - name
          - -name
          - type
          - -type
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Host'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Host
      x-list: true
    post:
      operationId: project_inventory_group_hosts_add
      description: Create a new host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneHost'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/OneHost'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-allow-append: true
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: inventory_id
      in: path
      required: true
      type: string
    - name: group_id
      in: path
      required: true
      type: string
  /project/{id}/inventory/{inventory_id}/group/{group_id}/hosts/{hosts_id}/:
    get:
      operationId: project_inventory_group_hosts_get
      description: Return a host instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHost'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Host
      x-list: false
    put:
      operationId: project_inventory_group_hosts_update
      description: Update a host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneHost'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHost'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    patch:
      operationId: project_inventory_group_hosts_edit
      description: Update one or more fields on an existing host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneHost'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHost'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    delete:
      operationId: project_inventory_group_hosts_remove
      description: Remove an existing host.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: inventory_id
      in: path
      required: true
      type: string
    - name: group_id
      in: path
      required: true
      type: string
    - name: hosts_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this hosts sublist.
  /project/{id}/inventory/{inventory_id}/group/{group_id}/hosts/{hosts_id}/copy/:
    post:
      operationId: project_inventory_group_hosts_inventory_group_copy
      description: Endpoint which copy instance with deps.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Copy'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/Copy'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: inventory_id
      in: path
      required: true
      type: string
    - name: group_id
      in: path
      required: true
      type: string
    - name: hosts_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this hosts sublist.
  /project/{id}/inventory/{inventory_id}/group/{group_id}/hosts/{hosts_id}/set_owner/:
    patch:
      operationId: project_inventory_group_hosts_inventory_group_set_owner
      description: Change instance owner.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/SetOwner'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SetOwner'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-title: Set owner
      x-multiaction: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: inventory_id
      in: path
      required: true
      type: string
    - name: group_id
      in: path
      required: true
      type: string
    - name: hosts_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this hosts sublist.
  /project/{id}/inventory/{inventory_id}/group/{group_id}/hosts/{hosts_id}/variables/:
    get:
      operationId: project_inventory_group_hosts_variables_list
      description: Return all variables of inventory host.
      parameters:
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: key
        in: query
        description: A key name string value (or comma separated list) of instance.
        required: false
        type: string
      - name: value
        in: query
        description: A value of instance.
        required: false
        type: string
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - key
          - -key
          - value
          - -value
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/InventoryVariable'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Variable
      x-list: true
    post:
      operationId: project_inventory_group_hosts_variables_add
      description: Create a new variable of inventory host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-allow-append: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: inventory_id
      in: path
      required: true
      type: string
    - name: group_id
      in: path
      required: true
      type: string
    - name: hosts_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this hosts sublist.
  /project/{id}/inventory/{inventory_id}/group/{group_id}/hosts/{hosts_id}/variables/{variables_id}/:
    get:
      operationId: project_inventory_group_hosts_variables_get
      description: Return a variable of inventory host.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Variable
      x-list: false
    put:
      operationId: project_inventory_group_hosts_variables_update
      description: Update variable value.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    patch:
      operationId: project_inventory_group_hosts_variables_edit
      description: Update one or more fields on an existing variable.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    delete:
      operationId: project_inventory_group_hosts_variables_remove
      description: Remove an existing variable.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: inventory_id
      in: path
      required: true
      type: string
    - name: group_id
      in: path
      required: true
      type: string
    - name: hosts_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this hosts sublist.
    - name: variables_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this variables sublist.
  /project/{id}/inventory/{inventory_id}/group/{group_id}/set_owner/:
    patch:
      operationId: project_inventory_group_inventory_set_owner
      description: Change instance owner.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/SetOwner'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SetOwner'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-title: Set owner
      x-multiaction: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: inventory_id
      in: path
      required: true
      type: string
    - name: group_id
      in: path
      required: true
      type: string
  /project/{id}/inventory/{inventory_id}/group/{group_id}/variables/:
    get:
      operationId: project_inventory_group_variables_list
      description: Return all variables of inventory host.
      parameters:
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: key
        in: query
        description: A key name string value (or comma separated list) of instance.
        required: false
        type: string
      - name: value
        in: query
        description: A value of instance.
        required: false
        type: string
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - key
          - -key
          - value
          - -value
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/InventoryVariable'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Variable
      x-list: true
    post:
      operationId: project_inventory_group_variables_add
      description: Create a new variable of inventory host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-allow-append: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: inventory_id
      in: path
      required: true
      type: string
    - name: group_id
      in: path
      required: true
      type: string
  /project/{id}/inventory/{inventory_id}/group/{group_id}/variables/{variables_id}/:
    get:
      operationId: project_inventory_group_variables_get
      description: Return a variable of inventory host.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Variable
      x-list: false
    put:
      operationId: project_inventory_group_variables_update
      description: Update variable value.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    patch:
      operationId: project_inventory_group_variables_edit
      description: Update one or more fields on an existing variable.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    delete:
      operationId: project_inventory_group_variables_remove
      description: Remove an existing variable.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: inventory_id
      in: path
      required: true
      type: string
    - name: group_id
      in: path
      required: true
      type: string
    - name: variables_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this variables sublist.
  /project/{id}/inventory/{inventory_id}/hosts/:
    get:
      operationId: project_inventory_hosts_list
      description: Return all hosts.
      parameters:
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: name
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Name
      - name: type
        in: query
        description: Instance type.
        required: false
        type: string
        enum:
        - ''
        - HOST
        - RANGE
      - name: variables
        in: query
        description: List of variables to filter. Comma separated "key:value" list.
        required: false
        type: string
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: name__not
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Exclude name
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - name
          - -name
          - type
          - -type
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Host'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Host
      x-list: true
    post:
      operationId: project_inventory_hosts_add
      description: Create a new host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneHost'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/OneHost'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-allow-append: true
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: inventory_id
      in: path
      required: true
      type: string
  /project/{id}/inventory/{inventory_id}/hosts/{hosts_id}/:
    get:
      operationId: project_inventory_hosts_get
      description: Return a host instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHost'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Host
      x-list: false
    put:
      operationId: project_inventory_hosts_update
      description: Update a host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneHost'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHost'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    patch:
      operationId: project_inventory_hosts_edit
      description: Update one or more fields on an existing host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneHost'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneHost'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    delete:
      operationId: project_inventory_hosts_remove
      description: Remove an existing host.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: inventory_id
      in: path
      required: true
      type: string
    - name: hosts_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this hosts sublist.
  /project/{id}/inventory/{inventory_id}/hosts/{hosts_id}/copy/:
    post:
      operationId: project_inventory_hosts_inventory_copy
      description: Endpoint which copy instance with deps.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Copy'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/Copy'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: inventory_id
      in: path
      required: true
      type: string
    - name: hosts_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this hosts sublist.
  /project/{id}/inventory/{inventory_id}/hosts/{hosts_id}/set_owner/:
    patch:
      operationId: project_inventory_hosts_inventory_set_owner
      description: Change instance owner.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/SetOwner'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SetOwner'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-title: Set owner
      x-multiaction: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: inventory_id
      in: path
      required: true
      type: string
    - name: hosts_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this hosts sublist.
  /project/{id}/inventory/{inventory_id}/hosts/{hosts_id}/variables/:
    get:
      operationId: project_inventory_hosts_variables_list
      description: Return all variables of inventory host.
      parameters:
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: key
        in: query
        description: A key name string value (or comma separated list) of instance.
        required: false
        type: string
      - name: value
        in: query
        description: A value of instance.
        required: false
        type: string
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - key
          - -key
          - value
          - -value
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/InventoryVariable'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Variable
      x-list: true
    post:
      operationId: project_inventory_hosts_variables_add
      description: Create a new variable of inventory host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-allow-append: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: inventory_id
      in: path
      required: true
      type: string
    - name: hosts_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this hosts sublist.
  /project/{id}/inventory/{inventory_id}/hosts/{hosts_id}/variables/{variables_id}/:
    get:
      operationId: project_inventory_hosts_variables_get
      description: Return a variable of inventory host.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Variable
      x-list: false
    put:
      operationId: project_inventory_hosts_variables_update
      description: Update variable value.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    patch:
      operationId: project_inventory_hosts_variables_edit
      description: Update one or more fields on an existing variable.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    delete:
      operationId: project_inventory_hosts_variables_remove
      description: Remove an existing variable.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: inventory_id
      in: path
      required: true
      type: string
    - name: hosts_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this hosts sublist.
    - name: variables_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this variables sublist.
  /project/{id}/inventory/{inventory_id}/set_owner/:
    patch:
      operationId: project_inventory_set_owner
      description: Change instance owner.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/SetOwner'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SetOwner'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-title: Set owner
      x-multiaction: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: inventory_id
      in: path
      required: true
      type: string
  /project/{id}/inventory/{inventory_id}/state/:
    get:
      operationId: project_inventory_state_get
      description: State
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryState'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Inventory
      x-list: false
    put:
      operationId: project_inventory_state_update
      description: State
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryStateUpdate'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryState'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-multiaction: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: inventory_id
      in: path
      required: true
      type: string
  /project/{id}/inventory/{inventory_id}/variables/:
    get:
      operationId: project_inventory_variables_list
      description: Return all variables of inventory host.
      parameters:
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: key
        in: query
        description: A key name string value (or comma separated list) of instance.
        required: false
        type: string
      - name: value
        in: query
        description: A value of instance.
        required: false
        type: string
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - key
          - -key
          - value
          - -value
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/InventoryVariable'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Variable
      x-list: true
    post:
      operationId: project_inventory_variables_add
      description: Create a new variable of inventory host.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-allow-append: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: inventory_id
      in: path
      required: true
      type: string
  /project/{id}/inventory/{inventory_id}/variables/{variables_id}/:
    get:
      operationId: project_inventory_variables_get
      description: Return a variable of inventory host.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Variable
      x-list: false
    put:
      operationId: project_inventory_variables_update
      description: Update variable value.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    patch:
      operationId: project_inventory_variables_edit
      description: Update one or more fields on an existing variable.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/InventoryVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InventoryVariable'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    delete:
      operationId: project_inventory_variables_remove
      description: Remove an existing variable.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: inventory_id
      in: path
      required: true
      type: string
    - name: variables_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this variables sublist.
  /project/{id}/set_owner/:
    patch:
      operationId: project_set_owner
      description: Change instance owner.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/SetOwner'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SetOwner'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-title: Set owner
      x-multiaction: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
  /project/{id}/sync/:
    patch:
      operationId: project_sync
      description: Synchronize project with repository.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Empty'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-title: Sync
      x-multiaction: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
  /project/{id}/variables/:
    get:
      operationId: project_variables_list
      description: Variable(id, hidden, content_type, object_id, key, value)
      parameters:
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: key
        in: query
        description: A key name string value (or comma separated list) of instance.
        required: false
        type: string
      - name: value
        in: query
        description: A value of instance.
        required: false
        type: string
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - key
          - -key
          - value
          - -value
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/ProjectVariable'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Variable
      x-list: true
    post:
      operationId: project_variables_add
      description: Variable(id, hidden, content_type, object_id, key, value)
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ProjectVariable'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/ProjectVariable'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-allow-append: false
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
  /project/{id}/variables/{variables_id}/:
    get:
      operationId: project_variables_get
      description: Variable(id, hidden, content_type, object_id, key, value)
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProjectVariable'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - main.Variable
      x-list: false
    put:
      operationId: project_variables_update
      description: Variable(id, hidden, content_type, object_id, key, value)
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ProjectVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProjectVariable'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    patch:
      operationId: project_variables_edit
      description: Variable(id, hidden, content_type, object_id, key, value)
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ProjectVariable'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProjectVariable'
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    delete:
      operationId: project_variables_remove
      description: Variable(id, hidden, content_type, object_id, key, value)
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - project
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this project.
      required: true
      type: integer
    - name: variables_id
      in: path
      required: true
      type: integer
      description: A unique integer value identifying instance of this variables sublist.
  /stats/:
    get:
      operationId: stats_list
      description: ''
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Stats'
      tags:
      - stats
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-list: true
    parameters: []
  /user/:
    get:
      operationId: user_list
      description: Return all users.
      parameters:
      - name: id
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Primary keys
      - name: username
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
      - name: is_active
        in: query
        description: Boolean value meaning status of user.
        required: false
        type: boolean
      - name: first_name
        in: query
        description: Users first name.
        required: false
        type: string
      - name: last_name
        in: query
        description: Users last name.
        required: false
        type: string
      - name: email
        in: query
        description: Users e-mail value.
        required: false
        type: string
      - name: id__not
        in: query
        description: A unique integer value (or comma separated list) identifying
          this instance.
        required: false
        type: array
        items:
          type: integer
        collectionFormat: csv
        minItems: 1
        uniqueItems: true
        x-title: Exclude primary keys
      - name: username__not
        in: query
        description: A name string value (or comma separated list) of instance.
        required: false
        type: string
        x-title: Username not
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: array
        items:
          type: string
          format: ordering_choices
          enum:
          - id
          - -id
          - username
          - -username
          - is_active
          - -is_active
          - email
          - -email
        x-title: Ordering
      - name: __search
        in: query
        description: A search term.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: OK
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/User'
      tags:
      - user
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - auth.User
      x-list: true
    post:
      operationId: user_add
      description: Create a new user.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/CreateUser'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/CreateUser'
      tags:
      - user
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters: []
  /user/{id}/:
    get:
      operationId: user_get
      description: Return a user instance.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneUser'
      tags:
      - user
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - auth.User
      x-list: false
    put:
      operationId: user_update
      description: Update a user.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneUser'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneUser'
      tags:
      - user
      security:
      - oauth2: []
      - session: []
      - basic: []
    patch:
      operationId: user_edit
      description: Update one or more fields on an existing user.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/OneUser'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OneUser'
      tags:
      - user
      security:
      - oauth2: []
      - session: []
      - basic: []
    delete:
      operationId: user_remove
      description: Remove an existing user.
      parameters: []
      responses:
        '204':
          description: NO CONTENT
      tags:
      - user
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this user.
      required: true
      type: integer
  /user/{id}/_settings/:
    get:
      operationId: user__settings_get
      description: Manage users.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/_UserSettings'
      tags:
      - user
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - auth.User
      x-list: false
    put:
      operationId: user__settings_update
      description: Manage users.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/_UserSettings'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/_UserSettings'
      tags:
      - user
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this user.
      required: true
      type: integer
  /user/{id}/change_password/:
    post:
      operationId: user_change_password
      description: Manage users.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/ChangePassword'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/ChangePassword'
      tags:
      - user
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this user.
      required: true
      type: integer
  /user/{id}/copy/:
    post:
      operationId: user_copy
      description: Endpoint which copy instance with deps.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/User'
      tags:
      - user
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this user.
      required: true
      type: integer
  /user/{id}/twofa/:
    get:
      operationId: user_twofa_get
      description: Manage users.
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TwoFA'
      tags:
      - user
      security:
      - oauth2: []
      - session: []
      - basic: []
      x-subscribe-labels:
      - auth.User
      x-list: false
    put:
      operationId: user_twofa_update
      description: Manage users.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/TwoFA'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TwoFA'
      tags:
      - user
      security:
      - oauth2: []
      - session: []
      - basic: []
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this user.
      required: true
      type: integer
definitions:
  ProjectCommunityTemplate:
    required:
    - id
    - name
    type: object
    properties:
      id:
        title: Id
        type: integer
        maximum: 9223372036854775807
        minimum: 0
      name:
        title: Name
        type: string
        maxLength: 1024
        minLength: 1
      type:
        title: Type
        type: string
        enum:
        - GIT
        - TAR
    x-properties-groups:
      '':
      - id
      - name
      - type
    x-view-field-name: name
  OneProjectCommunityTemplate:
    required:
    - id
    - name
    - description
    - repository
    type: object
    properties:
      id:
        title: Id
        type: integer
        maximum: 9223372036854775807
        minimum: 0
      name:
        title: Name
        type: string
        maxLength: 1024
        minLength: 1
      description:
        title: Description
        type: string
        minLength: 1
      type:
        title: Type
        type: string
        enum:
        - GIT
        - TAR
      repository:
        title: Repository
        type: string
        maxLength: 2048
        minLength: 1
    x-properties-groups:
      '':
      - id
      - name
      - description
      - type
      - repository
    x-view-field-name: name
  ProjectCommunityTemplateUseIt:
    type: object
    properties:
      project_id:
        title: Project id
        type: integer
        readOnly: true
        x-options:
          redirect:
            operation_name: project
            depend_field: null
            concat_field_name: false
        x-nullable: true
      name:
        title: Name
        type: string
        minLength: 1
    x-properties-groups:
      '':
      - project_id
      - name
    x-view-field-name: name
  Group:
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 512
        minLength: 1
      children:
        title: Children
        type: boolean
    x-properties-groups:
      '':
      - id
      - name
      - children
    x-view-field-name: name
  CreateGroup:
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 512
        minLength: 1
      notes:
        title: Notes
        type: string
        format: textarea
      children:
        title: Contains groups
        type: boolean
        default: false
      owner:
        title: Owner
        type: integer
        format: fk
        readOnly: true
        x-options:
          model:
            $ref: '#/definitions/User'
          value_field: id
          view_field: username
          usePrefetch: true
          makeLink: true
          dependence: null
          filters: null
    x-properties-groups:
      '':
      - id
      - name
      - notes
      - children
      - owner
    x-view-field-name: name
  OneGroup:
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 512
        minLength: 1
      notes:
        title: Notes
        type: string
        format: textarea
      children:
        title: Contains groups
        type: boolean
        readOnly: true
      owner:
        title: Owner
        type: integer
        format: fk
        readOnly: true
        x-options:
          model:
            $ref: '#/definitions/User'
          value_field: id
          view_field: username
          usePrefetch: true
          makeLink: true
          dependence: null
          filters: null
    x-properties-groups:
      '':
      - id
      - name
      - notes
      - children
      - owner
    x-view-field-name: name
  Copy:
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 512
        minLength: 1
    x-properties-groups:
      '':
      - id
      - name
    x-view-field-name: name
  Host:
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 512
        minLength: 1
      type:
        title: Type
        type: string
        maxLength: 5
        minLength: 1
    x-properties-groups:
      '':
      - id
      - name
      - type
    x-view-field-name: name
  OneHost:
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 512
        minLength: 1
      notes:
        title: Notes
        type: string
        format: textarea
      type:
        title: Type
        type: string
        enum:
        - HOST
        - RANGE
        default: HOST
      owner:
        title: Owner
        type: integer
        format: fk
        readOnly: true
        x-options:
          model:
            $ref: '#/definitions/User'
          value_field: id
          view_field: username
          usePrefetch: true
          makeLink: true
          dependence: null
          filters: null
    x-properties-groups:
      '':
      - id
      - name
      - notes
      - type
      - owner
    x-view-field-name: name
  SetOwner:
    required:
    - owner
    type: object
    properties:
      owner:
        title: Owner
        type: integer
        format: fk
        x-options:
          model:
            $ref: '#/definitions/User'
          value_field: id
          view_field: username
          usePrefetch: true
          makeLink: true
          dependence: null
          filters: null
    x-properties-groups:
      '':
      - owner
    x-view-field-name: owner
  InventoryVariable:
    required:
    - key
    - value
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      key:
        title: Key
        type: string
        format: autocomplete
        enum:
        - ansible_host
        - ansible_port
        - ansible_user
        - ansible_connection
        - ansible_password
        - ansible_ssh_pass
        - ansible_ssh_private_key_file
        - ansible_ssh_common_args
        - ansible_sftp_extra_args
        - ansible_scp_extra_args
        - ansible_ssh_extra_args
        - ansible_ssh_executable
        - ansible_ssh_pipelining
        - ansible_become
        - ansible_become_method
        - ansible_become_user
        - ansible_become_pass
        - ansible_become_password
        - ansible_become_exe
        - ansible_become_flags
        - ansible_shell_type
        - ansible_python_interpreter
        - ansible_ruby_interpreter
        - ansible_perl_interpreter
        - ansible_shell_executable
        minLength: 1
      value:
        title: Value
        type: string
        format: dynamic
        x-options:
          field: key
          choices: {}
          types:
            ansible_password:
              type: string
              format: password
              minLength: 1
            ansible_ssh_pass:
              type: string
              format: password
              minLength: 1
            ansible_become_pass:
              type: string
              format: password
              minLength: 1
            ansible_become_password:
              type: string
              format: password
              minLength: 1
            ansible_become:
              type: boolean
            ansible_port:
              type: integer
              default: 22
            ansible_ssh_private_key_file:
              type: string
              format: secretfile
              minLength: 1
              x-options:
                media_types:
                - '*/*'
    x-properties-groups:
      '':
      - id
      - key
      - value
    x-view-field-name: key
  History:
    required:
    - executor
    - mode
    - status
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      start_time:
        title: Start time
        type: string
        format: date-time
      executor:
        title: Executor
        type: string
        format: dynamic
        x-options:
          field: initiator_type
          choices: {}
          types:
            project:
              type: integer
              format: fk
              x-options:
                model:
                  $ref: '#/definitions/User'
                value_field: id
                view_field: username
                usePrefetch: true
                makeLink: true
                dependence: null
                filters: null
            template:
              type: integer
              format: fk
              x-options:
                model:
                  $ref: '#/definitions/User'
                value_field: id
                view_field: username
                usePrefetch: true
                makeLink: true
                dependence: null
                filters: null
            scheduler:
              type: string
              format: static_value
              x-options:
                staticValue: system
                realField: string
      initiator:
        title: Initiator
        type: integer
        maximum: 9223372036854775807
        minimum: -9223372036854775808
      initiator_type:
        title: Initiator type
        type: string
        maxLength: 50
        minLength: 1
      project:
        title: Project
        type: integer
        x-nullable: true
      inventory:
        title: Inventory
        type: string
        format: inventory
        readOnly: true
        minLength: 1
        x-options:
          filters: null
      kind:
        title: Kind
        type: string
        maxLength: 50
        minLength: 1
      mode:
        title: Mode
        type: string
        maxLength: 256
        minLength: 1
      options:
        title: Options
        type: string
        readOnly: true
      status:
        title: Status
        type: string
        enum:
        - DELAY
        - RUN
        - OK
        - ERROR
        - OFFLINE
        - INTERRUPTED
      stop_time:
        title: Stop time
        type: string
        format: date-time
        x-nullable: true
    x-properties-groups:
      '':
      - id
      - start_time
      - executor
      - initiator
      - initiator_type
      - project
      - inventory
      - kind
      - mode
      - options
      - status
      - stop_time
    x-view-field-name: start_time
  OneHistory:
    required:
    - status
    - executor
    - mode
    - execute_args
    - execution_time
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      status:
        title: Status
        type: string
        enum:
        - DELAY
        - RUN
        - OK
        - ERROR
        - OFFLINE
        - INTERRUPTED
      executor:
        title: Executor
        type: string
        format: dynamic
        x-options:
          field: initiator_type
          choices: {}
          types:
            project:
              type: integer
              format: fk
              x-options:
                model:
                  $ref: '#/definitions/User'
                value_field: id
                view_field: username
                usePrefetch: true
                makeLink: true
                dependence: null
                filters: null
            template:
              type: integer
              format: fk
              x-options:
                model:
                  $ref: '#/definitions/User'
                value_field: id
                view_field: username
                usePrefetch: true
                makeLink: true
                dependence: null
                filters: null
            scheduler:
              type: string
              format: static_value
              x-options:
                staticValue: system
                realField: string
      project:
        title: Project
        type: integer
        x-nullable: true
      revision:
        title: Revision
        type: string
        maxLength: 256
        x-nullable: true
      inventory:
        title: Inventory
        type: integer
        x-nullable: true
      kind:
        title: Kind
        type: string
        maxLength: 50
        minLength: 1
      mode:
        title: Mode
        type: string
        maxLength: 256
        minLength: 1
      execute_args:
        title: Execute args
        type: string
        format: dynamic
        x-options:
          field: kind
          choices: {}
          types:
            ANSIBLE_PLAYBOOK:
              required:
              - playbook
              type: object
              properties:
                playbook:
                  title: Playbook
                  type: string
                  format: fk_autocomplete
                  minLength: 1
                  x-options:
                    model:
                      $ref: '#/definitions/AnsiblePlaybook'
                    value_field: playbook
                    view_field: playbook
                    usePrefetch: true
                args:
                  title: Args
                  description: Playbook(s)
                  type: string
                become:
                  title: Become
                  description: run operations with become (does not imply password
                    prompting)
                  type: boolean
                become_method:
                  title: Become method
                  description: privilege escalation method to use (default=sudo),
                    use `ansible-doc -t become -l` to list valid choices.
                  type: string
                check:
                  title: Check
                  description: don't make any changes; instead, try to predict some
                    of the changes that may occur
                  type: boolean
                connection:
                  title: Connection
                  description: connection type to use (default=smart)
                  type: string
                diff:
                  title: Diff
                  description: when changing (small) files and templates, show the
                    differences in those files; works great with --check
                  type: boolean
                extra_vars:
                  title: Extra vars
                  description: set additional variables as key=value or YAML/JSON,
                    if filename prepend with @
                  type: string
                flush_cache:
                  title: Flush cache
                  description: clear the fact cache for every host in inventory
                  type: boolean
                force_handlers:
                  title: Force handlers
                  description: run handlers even if a task fails
                  type: boolean
                forks:
                  title: Forks
                  description: specify number of parallel processes to use (default=5)
                  type: integer
                inventory:
                  title: Inventory
                  description: specify inventory host path or comma separated host
                    list. --inventory-file is deprecated
                  type: string
                  format: inventory
                  x-options:
                    filters:
                      plugin: POLEMARCH_DB,ANSIBLE_FILE,ANSIBLE_STRING
                limit:
                  title: Limit
                  description: further limit selected hosts to an additional pattern
                  type: string
                list_hosts:
                  title: List hosts
                  description: outputs a list of matching hosts; does not execute
                    anything else
                  type: boolean
                list_tags:
                  title: List tags
                  description: list all available tags
                  type: boolean
                list_tasks:
                  title: List tasks
                  description: list all tasks that would be executed
                  type: boolean
                private_key:
                  title: Private key
                  description: use this file to authenticate the connection
                  type: string
                  format: secretfile
                  minLength: 1
                  x-options:
                    media_types:
                    - '*/*'
                scp_extra_args:
                  title: Scp extra args
                  description: specify extra arguments to pass to scp only (e.g. -l)
                  type: string
                sftp_extra_args:
                  title: Sftp extra args
                  description: specify extra arguments to pass to sftp only (e.g.
                    -f, -l)
                  type: string
                skip_tags:
                  title: Skip tags
                  description: only run plays and tasks whose tags do not match these
                    values
                  type: string
                ssh_common_args:
                  title: Ssh common args
                  description: specify common arguments to pass to sftp/scp/ssh (e.g.
                    ProxyCommand)
                  type: string
                ssh_extra_args:
                  title: Ssh extra args
                  description: specify extra arguments to pass to ssh only (e.g. -R)
                  type: string
                start_at_task:
                  title: Start at task
                  description: start the playbook at the task matching this name
                  type: string
                step:
                  title: Step
                  description: 'one-step-at-a-time: confirm each task before running'
                  type: boolean
                syntax_check:
                  title: Syntax check
                  description: perform a syntax check on the playbook, but do not
                    execute it
                  type: boolean
                tags:
                  title: Tags
                  description: only run plays and tasks tagged with these values
                  type: string
                timeout:
                  title: Timeout
                  description: override the connection timeout in seconds (default=10)
                  type: integer
                user:
                  title: User
                  description: connect as this user (default=None)
                  type: string
                vault_password_file:
                  title: Vault password file
                  description: vault password file
                  type: string
                  format: secretfile
                  minLength: 1
                  x-options:
                    media_types:
                    - '*/*'
                verbose:
                  title: Verbose
                  description: verbose mode (-vvv for more, -vvvv to enable connection
                    debugging)
                  type: integer
                  maximum: 4
                  minimum: 0
              x-properties-groups:
                '':
                - playbook
                - args
                - become
                - become_method
                - check
                - connection
                - diff
                - extra_vars
                - flush_cache
                - force_handlers
                - forks
                - inventory
                - limit
                - list_hosts
                - list_tags
                - list_tasks
                - private_key
                - scp_extra_args
                - sftp_extra_args
                - skip_tags
                - ssh_common_args
                - ssh_extra_args
                - start_at_task
                - step
                - syntax_check
                - tags
                - timeout
                - user
                - vault_password_file
                - verbose
              x-view-field-name: args
              x-hide-not-required: true
            ANSIBLE_MODULE:
              required:
              - module
              type: object
              properties:
                module:
                  title: Module
                  type: string
                  format: fk_autocomplete
                  minLength: 1
                  x-options:
                    model:
                      $ref: '#/definitions/AnsibleModule'
                    value_field: path
                    view_field: path
                    usePrefetch: true
                args:
                  title: Args
                  description: host pattern
                  type: string
                background:
                  title: Background
                  description: run asynchronously, failing after X seconds (default=N/A)
                  type: integer
                become:
                  title: Become
                  description: run operations with become (does not imply password
                    prompting)
                  type: boolean
                become_method:
                  title: Become method
                  description: privilege escalation method to use (default=sudo),
                    use `ansible-doc -t become -l` to list valid choices.
                  type: string
                check:
                  title: Check
                  description: don't make any changes; instead, try to predict some
                    of the changes that may occur
                  type: boolean
                connection:
                  title: Connection
                  description: connection type to use (default=smart)
                  type: string
                diff:
                  title: Diff
                  description: when changing (small) files and templates, show the
                    differences in those files; works great with --check
                  type: boolean
                extra_vars:
                  title: Extra vars
                  description: set additional variables as key=value or YAML/JSON,
                    if filename prepend with @
                  type: string
                forks:
                  title: Forks
                  description: specify number of parallel processes to use (default=5)
                  type: integer
                inventory:
                  title: Inventory
                  description: specify inventory host path or comma separated host
                    list. --inventory-file is deprecated
                  type: string
                  format: inventory
                  x-options:
                    filters:
                      plugin: POLEMARCH_DB,ANSIBLE_FILE,ANSIBLE_STRING
                limit:
                  title: Limit
                  description: further limit selected hosts to an additional pattern
                  type: string
                list_hosts:
                  title: List hosts
                  description: outputs a list of matching hosts; does not execute
                    anything else
                  type: boolean
                one_line:
                  title: One line
                  description: condense output
                  type: boolean
                playbook_dir:
                  title: Playbook dir
                  description: Since this tool does not use playbooks, use this as
                    a substitute playbook directory.This sets the relative path for
                    many features including roles/ group_vars/ etc.
                  type: string
                poll:
                  title: Poll
                  description: set the poll interval if using -B (default=15)
                  type: integer
                private_key:
                  title: Private key
                  description: use this file to authenticate the connection
                  type: string
                  format: secretfile
                  minLength: 1
                  x-options:
                    media_types:
                    - '*/*'
                scp_extra_args:
                  title: Scp extra args
                  description: specify extra arguments to pass to scp only (e.g. -l)
                  type: string
                sftp_extra_args:
                  title: Sftp extra args
                  description: specify extra arguments to pass to sftp only (e.g.
                    -f, -l)
                  type: string
                ssh_common_args:
                  title: Ssh common args
                  description: specify common arguments to pass to sftp/scp/ssh (e.g.
                    ProxyCommand)
                  type: string
                ssh_extra_args:
                  title: Ssh extra args
                  description: specify extra arguments to pass to ssh only (e.g. -R)
                  type: string
                syntax_check:
                  title: Syntax check
                  description: perform a syntax check on the playbook, but do not
                    execute it
                  type: boolean
                timeout:
                  title: Timeout
                  description: override the connection timeout in seconds (default=10)
                  type: integer
                tree:
                  title: Tree
                  description: log output to this directory
                  type: string
                user:
                  title: User
                  description: connect as this user (default=None)
                  type: string
                vault_password_file:
                  title: Vault password file
                  description: vault password file
                  type: string
                  format: secretfile
                  minLength: 1
                  x-options:
                    media_types:
                    - '*/*'
                verbose:
                  title: Verbose
                  description: verbose mode (-vvv for more, -vvvv to enable connection
                    debugging)
                  type: integer
                  maximum: 4
                  minimum: 0
                group:
                  title: Group
                  type: string
                  default: all
              x-properties-groups:
                '':
                - module
                - args
                - background
                - become
                - become_method
                - check
                - connection
                - diff
                - extra_vars
                - forks
                - inventory
                - limit
                - list_hosts
                - one_line
                - playbook_dir
                - poll
                - private_key
                - scp_extra_args
                - sftp_extra_args
                - ssh_common_args
                - ssh_extra_args
                - syntax_check
                - timeout
                - tree
                - user
                - vault_password_file
                - verbose
                - group
              x-view-field-name: args
              x-hide-not-required: true
      execution_time:
        title: Execution time
        type: integer
        format: uptime
      start_time:
        title: Start time
        type: string
        format: date-time
      stop_time:
        title: Stop time
        type: string
        format: date-time
        x-nullable: true
      initiator:
        title: Initiator
        type: integer
        maximum: 9223372036854775807
        minimum: -9223372036854775808
      initiator_type:
        title: Initiator type
        type: string
        maxLength: 50
        minLength: 1
      options:
        title: Options
        type: string
        readOnly: true
      raw_args:
        title: Raw args
        type: string
        minLength: 1
      raw_stdout:
        title: Raw stdout
        type: string
        readOnly: true
      raw_inventory:
        title: Raw inventory
        type: string
        minLength: 1
    x-properties-groups:
      '':
      - id
      - status
      - executor
      - project
      - revision
      - inventory
      - kind
      - mode
      - execute_args
      - execution_time
      - start_time
      - stop_time
      - initiator
      - initiator_type
      - options
      - raw_args
      - raw_stdout
      - raw_inventory
    x-view-field-name: status
  Empty:
    type: object
    properties: {}
    x-properties-groups:
      '': []
    x-view-field-name: null
  Response:
    type: object
    properties:
      detail:
        title: Detail
        type: string
        readOnly: true
        minLength: 1
    x-properties-groups:
      '':
      - detail
    x-view-field-name: detail
  FactsResponse:
    type: object
    properties:
      facts:
        title: Facts
        type: string
        format: json
        readOnly: true
    x-properties-groups:
      '':
      - facts
    x-view-field-name: facts
  Hook:
    required:
    - type
    - recipients
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 512
        minLength: 1
      type:
        title: Type
        type: string
        maxLength: 32
        minLength: 1
      when:
        title: When
        type: string
        maxLength: 32
        minLength: 1
        x-nullable: true
      enable:
        title: Enable
        type: boolean
      recipients:
        title: Recipients
        type: string
        minLength: 1
    x-properties-groups:
      '':
      - id
      - name
      - type
      - when
      - enable
      - recipients
    x-view-field-name: name
  OneHook:
    required:
    - type
    - when
    - recipients
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 512
        minLength: 1
      type:
        title: Type
        type: string
        enum:
        - HTTP
        - SCRIPT
      when:
        title: When
        type: string
        enum:
        - on_execution
        - after_execution
        - on_user_add
        - on_user_upd
        - on_user_del
        - on_object_add
        - on_object_upd
        - on_object_del
      enable:
        title: Enable
        type: boolean
      recipients:
        title: Recipients
        description: '<b>HTTP</b>: list of URLs, separated by "|".<br><b>SCRIPT</b>:
          script files, separated by "|" Files must be in HOOKS_DIR directory.'
        type: string
        minLength: 1
    x-properties-groups:
      '':
      - id
      - name
      - type
      - when
      - enable
      - recipients
    x-view-field-name: name
  Inventory:
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 512
        minLength: 1
      plugin:
        title: Plugin
        type: string
        enum:
        - POLEMARCH_DB
        - ANSIBLE_STRING
        - ANSIBLE_FILE
        readOnly: true
      state_managed:
        title: State managed
        type: boolean
        readOnly: true
    x-properties-groups:
      '':
      - id
      - name
      - plugin
      - state_managed
    x-view-field-name: name
  CreateInventory:
    required:
    - plugin
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 512
        minLength: 1
      plugin:
        title: Plugin
        type: string
        enum:
        - POLEMARCH_DB
        - ANSIBLE_STRING
        - ANSIBLE_FILE
      owner:
        title: Owner
        type: integer
        format: fk
        readOnly: true
        x-options:
          model:
            $ref: '#/definitions/User'
          value_field: id
          view_field: username
          usePrefetch: true
          makeLink: true
          dependence: null
          filters: null
      notes:
        title: Notes
        type: string
        format: textarea
      state_managed:
        title: State managed
        type: boolean
        readOnly: true
    x-properties-groups:
      '':
      - id
      - name
      - plugin
      - owner
      - notes
      - state_managed
    x-view-field-name: name
  ImportInventory:
    required:
    - name
    - plugin
    - data
    type: object
    properties:
      inventory_id:
        title: Inventory id
        type: integer
        readOnly: true
        x-options:
          redirect:
            operation_name: inventory
            depend_field: null
            concat_field_name: false
      name:
        title: Name
        type: string
        minLength: 1
      plugin:
        title: Plugin
        type: string
        enum:
        - POLEMARCH_DB
        - ANSIBLE_STRING
      data:
        title: Data
        type: string
        format: dynamic
        x-options:
          field: plugin
          choices: {}
          types:
            POLEMARCH_DB:
              required:
              - body
              type: object
              properties:
                body:
                  title: Body
                  type: string
                  format: file
                  minLength: 1
                  x-options:
                    media_types:
                    - '*/*'
              x-properties-groups:
                '':
                - body
              x-view-field-name: body
            ANSIBLE_STRING:
              required:
              - file
              type: object
              properties:
                file:
                  title: File
                  type: object
                  properties:
                    name:
                      type: string
                      x-nullable: true
                    content:
                      type: string
                      x-nullable: true
                    mediaType:
                      type: string
                      x-nullable: true
                  x-format: namedbinfile
                  x-validators: {}
              x-properties-groups:
                '':
                - file
              x-view-field-name: file
    x-properties-groups:
      '':
      - inventory_id
      - name
      - plugin
      - data
    x-view-field-name: name
  OneInventory:
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 512
        minLength: 1
      plugin:
        title: Plugin
        type: string
        enum:
        - POLEMARCH_DB
        - ANSIBLE_STRING
        - ANSIBLE_FILE
        readOnly: true
      owner:
        title: Owner
        type: integer
        format: fk
        readOnly: true
        x-options:
          model:
            $ref: '#/definitions/User'
          value_field: id
          view_field: username
          usePrefetch: true
          makeLink: true
          dependence: null
          filters: null
      notes:
        title: Notes
        type: string
        format: textarea
      state_managed:
        title: State managed
        type: boolean
        readOnly: true
    x-properties-groups:
      '':
      - id
      - name
      - plugin
      - owner
      - notes
      - state_managed
    x-view-field-name: name
  InventoryState:
    required:
    - data
    type: object
    properties:
      data:
        title: Data
        type: string
        format: dynamic
        x-options:
          field: plugin
          source_view: <<parent>>
          choices: {}
          types:
            POLEMARCH_DB:
              type: object
              properties: {}
              x-properties-groups:
                '': []
              x-view-field-name: null
            ANSIBLE_STRING:
              required:
              - body
              type: object
              properties:
                body:
                  title: Body
                  type: string
                  format: file
                  minLength: 1
                  x-options:
                    media_types:
                    - '*/*'
                filename:
                  title: Filename
                  type: string
                  default: ''
                extension:
                  title: Extension
                  type: string
                  format: autocomplete
                  enum:
                  - yaml
                  - ini
                  - json
                  default: yaml
                  minLength: 1
                executable:
                  title: Executable
                  type: boolean
                  default: false
              x-properties-groups:
                '':
                - body
                - filename
                - extension
                - executable
              x-view-field-name: filename
            ANSIBLE_FILE:
              type: object
              properties:
                path:
                  title: Path
                  type: string
                  default: ''
                  minLength: 1
              x-properties-groups:
                '':
                - path
              x-view-field-name: path
    x-properties-groups:
      '':
      - data
    x-view-field-name: data
  InventoryStateUpdate:
    required:
    - data
    type: object
    properties:
      data:
        title: Data
        type: string
        format: dynamic
        x-options:
          field: plugin
          source_view: <<parent>>.<<parent>>
          choices: {}
          types:
            POLEMARCH_DB:
              type: object
              properties: {}
              x-properties-groups:
                '': []
              x-view-field-name: null
            ANSIBLE_STRING:
              required:
              - body
              type: object
              properties:
                body:
                  title: Body
                  type: string
                  format: file
                  minLength: 1
                  x-options:
                    media_types:
                    - '*/*'
                filename:
                  title: Filename
                  type: string
                  default: ''
                extension:
                  title: Extension
                  type: string
                  format: autocomplete
                  enum:
                  - yaml
                  - ini
                  - json
                  default: yaml
                  minLength: 1
                executable:
                  title: Executable
                  type: boolean
                  default: false
              x-properties-groups:
                '':
                - body
                - filename
                - extension
                - executable
              x-view-field-name: filename
            ANSIBLE_FILE:
              type: object
              properties:
                path:
                  title: Path
                  type: string
                  default: ''
                  minLength: 1
              x-properties-groups:
                '':
                - path
              x-view-field-name: path
    x-properties-groups:
      '':
      - data
    x-view-field-name: data
  Project:
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 512
        minLength: 1
      type:
        title: Type
        type: string
        readOnly: true
        minLength: 1
      status:
        title: Status
        type: string
        enum:
        - NEW
        - WAIT_SYNC
        - SYNC
        - ERROR
        - OK
        readOnly: true
    x-properties-groups:
      '':
      - id
      - name
      - type
      - status
    x-view-field-name: name
  CreateProject:
    required:
    - name
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        minLength: 1
      type:
        title: Repo type
        type: string
        enum:
        - MANUAL
        - GIT
        - TAR
        default: MANUAL
      repository:
        title: Repo url
        type: string
        format: dynamic
        default: MANUAL
        x-options:
          field: type
          choices: {}
          types:
            MANUAL: hidden
            TAR:
              type: string
              minLength: 1
            GIT:
              type: string
              minLength: 1
      repo_auth:
        title: Repo auth type
        type: string
        format: dynamic
        default: NONE
        x-options:
          field: type
          choices: {}
          types:
            MANUAL: hidden
            TAR: hidden
            GIT:
              type: string
              enum:
              - NONE
              - KEY
              - PASSWORD
              default: NONE
      auth_data:
        title: Repo auth data
        type: string
        format: dynamic
        default: ''
        x-options:
          field: repo_auth
          choices: {}
          types:
            NONE: hidden
            KEY:
              type: string
              format: secretfile
              minLength: 1
              x-options:
                media_types:
                - '*/*'
            PASSWORD:
              type: string
              format: password
              minLength: 1
      branch:
        title: Branch for GIT (branch/tag/SHA) or TAR (subdir)
        type: string
        format: dynamic
        x-options:
          field: type
          choices: {}
          types:
            MANUAL: hidden
            GIT:
              type: string
              minLength: 1
            TAR:
              type: string
              minLength: 1
        x-nullable: true
      additional_playbook_path:
        title: Directory with playbooks
        type: string
        minLength: 1
        x-nullable: true
      status:
        title: Status
        type: string
        readOnly: true
        default: NEW
        minLength: 1
    x-properties-groups:
      General:
      - name
      - type
      - additional_playbook_path
      Repository:
      - repository
      - branch
      - repo_auth
      - auth_data
      '':
      - id
      - status
    x-view-field-name: name
  Data:
    type: object
    properties: {}
    x-nullable: true
    x-properties-groups:
      '': []
    x-view-field-name: null
  OneProject:
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 512
        minLength: 1
      repository:
        title: Repository
        type: string
        default: MANUAL
        minLength: 1
      status:
        title: Status
        type: string
        enum:
        - NEW
        - WAIT_SYNC
        - SYNC
        - ERROR
        - OK
        readOnly: true
      revision:
        title: Revision
        type: string
        readOnly: true
      branch:
        title: Branch
        type: string
        readOnly: true
      owner:
        title: Owner
        type: integer
        format: fk
        readOnly: true
        x-options:
          model:
            $ref: '#/definitions/User'
          value_field: id
          view_field: username
          usePrefetch: true
          makeLink: true
          dependence: null
          filters: null
      notes:
        title: Notes
        type: string
        format: textarea
      readme_content:
        title: ''
        type: string
        format: html
        readOnly: true
        minLength: 1
      execute_view_data:
        $ref: '#/definitions/Data'
    x-properties-groups:
      '':
      - id
      - name
      - repository
      - status
      - revision
      - branch
      - owner
      - notes
      - readme_content
      - execute_view_data
    x-view-field-name: name
  ProjectTemplateOption:
    required:
    - template
    - extended_name
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
      template:
        title: Template
        type: integer
        format: fk
        x-options:
          model:
            $ref: '#/definitions/ExecutionTemplate'
          value_field: id
          view_field: name
          usePrefetch: true
          makeLink: true
          dependence: null
          filters: null
      extended_name:
        title: Extended name
        type: string
        minLength: 1
    x-properties-groups:
      '':
      - id
      - template
      - extended_name
    x-view-field-name: template
  OneProjectTemplateOption:
    required:
    - template
    - extended_name
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
      template:
        title: Template
        type: integer
        format: fk
        x-options:
          model:
            $ref: '#/definitions/ExecutionTemplate'
          value_field: id
          view_field: name
          usePrefetch: true
          makeLink: true
          dependence: null
          filters: null
      extended_name:
        title: Extended name
        type: string
        minLength: 1
    x-properties-groups:
      '':
      - id
      - template
      - extended_name
    x-view-field-name: template
  AnsibleModule:
    required:
    - path
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      path:
        title: Path
        type: string
        maxLength: 1024
        minLength: 1
    x-properties-groups:
      '':
      - id
      - path
    x-view-field-name: path
  OneAnsibleModule:
    required:
    - path
    - data
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      path:
        title: Path
        type: string
        maxLength: 1024
        minLength: 1
      data:
        title: Data
        type: string
        format: json
    x-properties-groups:
      '':
      - id
      - path
      - data
    x-view-field-name: path
  AnsiblePlaybook:
    required:
    - playbook
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 251
        minLength: 1
      playbook:
        title: Playbook
        type: string
        maxLength: 256
        minLength: 1
    x-properties-groups:
      '':
      - id
      - name
      - playbook
    x-view-field-name: name
  OneAnsiblePlaybook:
    required:
    - playbook
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 251
        minLength: 1
      playbook:
        title: Playbook
        type: string
        maxLength: 256
        minLength: 1
    x-properties-groups:
      '':
      - id
      - name
      - playbook
    x-view-field-name: name
  ExecuteAnsibleModule:
    required:
    - module
    type: object
    properties:
      module:
        title: Module
        type: string
        format: fk_autocomplete
        minLength: 1
        x-options:
          model:
            $ref: '#/definitions/AnsibleModule'
          value_field: path
          view_field: path
          usePrefetch: true
      args:
        title: Args
        description: host pattern
        type: string
      background:
        title: Background
        description: run asynchronously, failing after X seconds (default=N/A)
        type: integer
      become:
        title: Become
        description: run operations with become (does not imply password prompting)
        type: boolean
      become_method:
        title: Become method
        description: privilege escalation method to use (default=sudo), use `ansible-doc
          -t become -l` to list valid choices.
        type: string
      check:
        title: Check
        description: don't make any changes; instead, try to predict some of the changes
          that may occur
        type: boolean
      connection:
        title: Connection
        description: connection type to use (default=smart)
        type: string
      diff:
        title: Diff
        description: when changing (small) files and templates, show the differences
          in those files; works great with --check
        type: boolean
      extra_vars:
        title: Extra vars
        description: set additional variables as key=value or YAML/JSON, if filename
          prepend with @
        type: string
      forks:
        title: Forks
        description: specify number of parallel processes to use (default=5)
        type: integer
      inventory:
        title: Inventory
        description: specify inventory host path or comma separated host list. --inventory-file
          is deprecated
        type: string
        format: inventory
        x-options:
          filters:
            plugin: POLEMARCH_DB,ANSIBLE_FILE,ANSIBLE_STRING
      limit:
        title: Limit
        description: further limit selected hosts to an additional pattern
        type: string
      list_hosts:
        title: List hosts
        description: outputs a list of matching hosts; does not execute anything else
        type: boolean
      one_line:
        title: One line
        description: condense output
        type: boolean
      playbook_dir:
        title: Playbook dir
        description: Since this tool does not use playbooks, use this as a substitute
          playbook directory.This sets the relative path for many features including
          roles/ group_vars/ etc.
        type: string
      poll:
        title: Poll
        description: set the poll interval if using -B (default=15)
        type: integer
      private_key:
        title: Private key
        description: use this file to authenticate the connection
        type: string
        format: secretfile
        minLength: 1
        x-options:
          media_types:
          - '*/*'
      scp_extra_args:
        title: Scp extra args
        description: specify extra arguments to pass to scp only (e.g. -l)
        type: string
      sftp_extra_args:
        title: Sftp extra args
        description: specify extra arguments to pass to sftp only (e.g. -f, -l)
        type: string
      ssh_common_args:
        title: Ssh common args
        description: specify common arguments to pass to sftp/scp/ssh (e.g. ProxyCommand)
        type: string
      ssh_extra_args:
        title: Ssh extra args
        description: specify extra arguments to pass to ssh only (e.g. -R)
        type: string
      syntax_check:
        title: Syntax check
        description: perform a syntax check on the playbook, but do not execute it
        type: boolean
      timeout:
        title: Timeout
        description: override the connection timeout in seconds (default=10)
        type: integer
      tree:
        title: Tree
        description: log output to this directory
        type: string
      user:
        title: User
        description: connect as this user (default=None)
        type: string
      vault_password_file:
        title: Vault password file
        description: vault password file
        type: string
        format: secretfile
        minLength: 1
        x-options:
          media_types:
          - '*/*'
      verbose:
        title: Verbose
        description: verbose mode (-vvv for more, -vvvv to enable connection debugging)
        type: integer
        maximum: 4
        minimum: 0
      group:
        title: Group
        type: string
        default: all
    x-properties-groups:
      '':
      - module
      - args
      - background
      - become
      - become_method
      - check
      - connection
      - diff
      - extra_vars
      - forks
      - inventory
      - limit
      - list_hosts
      - one_line
      - playbook_dir
      - poll
      - private_key
      - scp_extra_args
      - sftp_extra_args
      - ssh_common_args
      - ssh_extra_args
      - syntax_check
      - timeout
      - tree
      - user
      - vault_password_file
      - verbose
      - group
    x-view-field-name: args
    x-hide-not-required: true
  ProjectExecuteResponse:
    type: object
    properties:
      detail:
        title: Detail
        type: string
        readOnly: true
        minLength: 1
      history_id:
        title: History id
        type: integer
        readOnly: true
        x-options:
          redirect:
            operation_name: project_history
            depend_field: null
            concat_field_name: false
        x-nullable: true
      executor:
        title: Executor
        type: integer
        format: fk
        readOnly: true
        x-options:
          model:
            $ref: '#/definitions/User'
          value_field: id
          view_field: name
          usePrefetch: true
          makeLink: true
          dependence: null
          filters: null
        x-nullable: true
    x-properties-groups:
      '':
      - detail
      - history_id
      - executor
    x-view-field-name: history_id
  ExecuteAnsiblePlaybook:
    required:
    - playbook
    type: object
    properties:
      playbook:
        title: Playbook
        type: string
        format: fk_autocomplete
        minLength: 1
        x-options:
          model:
            $ref: '#/definitions/AnsiblePlaybook'
          value_field: playbook
          view_field: playbook
          usePrefetch: true
      args:
        title: Args
        description: Playbook(s)
        type: string
      become:
        title: Become
        description: run operations with become (does not imply password prompting)
        type: boolean
      become_method:
        title: Become method
        description: privilege escalation method to use (default=sudo), use `ansible-doc
          -t become -l` to list valid choices.
        type: string
      check:
        title: Check
        description: don't make any changes; instead, try to predict some of the changes
          that may occur
        type: boolean
      connection:
        title: Connection
        description: connection type to use (default=smart)
        type: string
      diff:
        title: Diff
        description: when changing (small) files and templates, show the differences
          in those files; works great with --check
        type: boolean
      extra_vars:
        title: Extra vars
        description: set additional variables as key=value or YAML/JSON, if filename
          prepend with @
        type: string
      flush_cache:
        title: Flush cache
        description: clear the fact cache for every host in inventory
        type: boolean
      force_handlers:
        title: Force handlers
        description: run handlers even if a task fails
        type: boolean
      forks:
        title: Forks
        description: specify number of parallel processes to use (default=5)
        type: integer
      inventory:
        title: Inventory
        description: specify inventory host path or comma separated host list. --inventory-file
          is deprecated
        type: string
        format: inventory
        x-options:
          filters:
            plugin: POLEMARCH_DB,ANSIBLE_FILE,ANSIBLE_STRING
      limit:
        title: Limit
        description: further limit selected hosts to an additional pattern
        type: string
      list_hosts:
        title: List hosts
        description: outputs a list of matching hosts; does not execute anything else
        type: boolean
      list_tags:
        title: List tags
        description: list all available tags
        type: boolean
      list_tasks:
        title: List tasks
        description: list all tasks that would be executed
        type: boolean
      private_key:
        title: Private key
        description: use this file to authenticate the connection
        type: string
        format: secretfile
        minLength: 1
        x-options:
          media_types:
          - '*/*'
      scp_extra_args:
        title: Scp extra args
        description: specify extra arguments to pass to scp only (e.g. -l)
        type: string
      sftp_extra_args:
        title: Sftp extra args
        description: specify extra arguments to pass to sftp only (e.g. -f, -l)
        type: string
      skip_tags:
        title: Skip tags
        description: only run plays and tasks whose tags do not match these values
        type: string
      ssh_common_args:
        title: Ssh common args
        description: specify common arguments to pass to sftp/scp/ssh (e.g. ProxyCommand)
        type: string
      ssh_extra_args:
        title: Ssh extra args
        description: specify extra arguments to pass to ssh only (e.g. -R)
        type: string
      start_at_task:
        title: Start at task
        description: start the playbook at the task matching this name
        type: string
      step:
        title: Step
        description: 'one-step-at-a-time: confirm each task before running'
        type: boolean
      syntax_check:
        title: Syntax check
        description: perform a syntax check on the playbook, but do not execute it
        type: boolean
      tags:
        title: Tags
        description: only run plays and tasks tagged with these values
        type: string
      timeout:
        title: Timeout
        description: override the connection timeout in seconds (default=10)
        type: integer
      user:
        title: User
        description: connect as this user (default=None)
        type: string
      vault_password_file:
        title: Vault password file
        description: vault password file
        type: string
        format: secretfile
        minLength: 1
        x-options:
          media_types:
          - '*/*'
      verbose:
        title: Verbose
        description: verbose mode (-vvv for more, -vvvv to enable connection debugging)
        type: integer
        maximum: 4
        minimum: 0
    x-properties-groups:
      '':
      - playbook
      - args
      - become
      - become_method
      - check
      - connection
      - diff
      - extra_vars
      - flush_cache
      - force_handlers
      - forks
      - inventory
      - limit
      - list_hosts
      - list_tags
      - list_tasks
      - private_key
      - scp_extra_args
      - sftp_extra_args
      - skip_tags
      - ssh_common_args
      - ssh_extra_args
      - start_at_task
      - step
      - syntax_check
      - tags
      - timeout
      - user
      - vault_password_file
      - verbose
    x-view-field-name: args
    x-hide-not-required: true
  ExecutionTemplate:
    required:
    - name
    - plugin
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 255
        minLength: 1
      plugin:
        title: Plugin
        type: string
        maxLength: 128
        minLength: 1
    x-properties-groups:
      '':
      - id
      - name
      - plugin
    x-view-field-name: name
  CreateExecutionTemplate:
    required:
    - name
    - plugin
    - arguments
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        minLength: 1
      plugin:
        title: Plugin
        type: string
        enum:
        - ANSIBLE_PLAYBOOK
        - ANSIBLE_MODULE
      arguments:
        title: Arguments
        type: string
        format: dynamic
        x-options:
          field: plugin
          choices: {}
          types:
            ANSIBLE_PLAYBOOK:
              required:
              - playbook
              type: object
              properties:
                playbook:
                  title: Playbook
                  type: string
                  format: fk_autocomplete
                  minLength: 1
                  x-options:
                    model:
                      $ref: '#/definitions/AnsiblePlaybook'
                    value_field: playbook
                    view_field: playbook
                    usePrefetch: true
                args:
                  title: Args
                  description: Playbook(s)
                  type: string
                become:
                  title: Become
                  description: run operations with become (does not imply password
                    prompting)
                  type: boolean
                become_method:
                  title: Become method
                  description: privilege escalation method to use (default=sudo),
                    use `ansible-doc -t become -l` to list valid choices.
                  type: string
                check:
                  title: Check
                  description: don't make any changes; instead, try to predict some
                    of the changes that may occur
                  type: boolean
                connection:
                  title: Connection
                  description: connection type to use (default=smart)
                  type: string
                diff:
                  title: Diff
                  description: when changing (small) files and templates, show the
                    differences in those files; works great with --check
                  type: boolean
                extra_vars:
                  title: Extra vars
                  description: set additional variables as key=value or YAML/JSON,
                    if filename prepend with @
                  type: string
                flush_cache:
                  title: Flush cache
                  description: clear the fact cache for every host in inventory
                  type: boolean
                force_handlers:
                  title: Force handlers
                  description: run handlers even if a task fails
                  type: boolean
                forks:
                  title: Forks
                  description: specify number of parallel processes to use (default=5)
                  type: integer
                inventory:
                  title: Inventory
                  description: specify inventory host path or comma separated host
                    list. --inventory-file is deprecated
                  type: string
                  format: inventory
                  x-options:
                    filters:
                      plugin: POLEMARCH_DB,ANSIBLE_FILE,ANSIBLE_STRING
                limit:
                  title: Limit
                  description: further limit selected hosts to an additional pattern
                  type: string
                list_hosts:
                  title: List hosts
                  description: outputs a list of matching hosts; does not execute
                    anything else
                  type: boolean
                list_tags:
                  title: List tags
                  description: list all available tags
                  type: boolean
                list_tasks:
                  title: List tasks
                  description: list all tasks that would be executed
                  type: boolean
                private_key:
                  title: Private key
                  description: use this file to authenticate the connection
                  type: string
                  format: secretfile
                  minLength: 1
                  x-options:
                    media_types:
                    - '*/*'
                scp_extra_args:
                  title: Scp extra args
                  description: specify extra arguments to pass to scp only (e.g. -l)
                  type: string
                sftp_extra_args:
                  title: Sftp extra args
                  description: specify extra arguments to pass to sftp only (e.g.
                    -f, -l)
                  type: string
                skip_tags:
                  title: Skip tags
                  description: only run plays and tasks whose tags do not match these
                    values
                  type: string
                ssh_common_args:
                  title: Ssh common args
                  description: specify common arguments to pass to sftp/scp/ssh (e.g.
                    ProxyCommand)
                  type: string
                ssh_extra_args:
                  title: Ssh extra args
                  description: specify extra arguments to pass to ssh only (e.g. -R)
                  type: string
                start_at_task:
                  title: Start at task
                  description: start the playbook at the task matching this name
                  type: string
                step:
                  title: Step
                  description: 'one-step-at-a-time: confirm each task before running'
                  type: boolean
                syntax_check:
                  title: Syntax check
                  description: perform a syntax check on the playbook, but do not
                    execute it
                  type: boolean
                tags:
                  title: Tags
                  description: only run plays and tasks tagged with these values
                  type: string
                timeout:
                  title: Timeout
                  description: override the connection timeout in seconds (default=10)
                  type: integer
                user:
                  title: User
                  description: connect as this user (default=None)
                  type: string
                vault_password_file:
                  title: Vault password file
                  description: vault password file
                  type: string
                  format: secretfile
                  minLength: 1
                  x-options:
                    media_types:
                    - '*/*'
                verbose:
                  title: Verbose
                  description: verbose mode (-vvv for more, -vvvv to enable connection
                    debugging)
                  type: integer
                  maximum: 4
                  minimum: 0
              x-properties-groups:
                '':
                - playbook
                - args
                - become
                - become_method
                - check
                - connection
                - diff
                - extra_vars
                - flush_cache
                - force_handlers
                - forks
                - inventory
                - limit
                - list_hosts
                - list_tags
                - list_tasks
                - private_key
                - scp_extra_args
                - sftp_extra_args
                - skip_tags
                - ssh_common_args
                - ssh_extra_args
                - start_at_task
                - step
                - syntax_check
                - tags
                - timeout
                - user
                - vault_password_file
                - verbose
              x-view-field-name: args
              x-hide-not-required: true
            ANSIBLE_MODULE:
              required:
              - module
              type: object
              properties:
                module:
                  title: Module
                  type: string
                  format: fk_autocomplete
                  minLength: 1
                  x-options:
                    model:
                      $ref: '#/definitions/AnsibleModule'
                    value_field: path
                    view_field: path
                    usePrefetch: true
                args:
                  title: Args
                  description: host pattern
                  type: string
                background:
                  title: Background
                  description: run asynchronously, failing after X seconds (default=N/A)
                  type: integer
                become:
                  title: Become
                  description: run operations with become (does not imply password
                    prompting)
                  type: boolean
                become_method:
                  title: Become method
                  description: privilege escalation method to use (default=sudo),
                    use `ansible-doc -t become -l` to list valid choices.
                  type: string
                check:
                  title: Check
                  description: don't make any changes; instead, try to predict some
                    of the changes that may occur
                  type: boolean
                connection:
                  title: Connection
                  description: connection type to use (default=smart)
                  type: string
                diff:
                  title: Diff
                  description: when changing (small) files and templates, show the
                    differences in those files; works great with --check
                  type: boolean
                extra_vars:
                  title: Extra vars
                  description: set additional variables as key=value or YAML/JSON,
                    if filename prepend with @
                  type: string
                forks:
                  title: Forks
                  description: specify number of parallel processes to use (default=5)
                  type: integer
                inventory:
                  title: Inventory
                  description: specify inventory host path or comma separated host
                    list. --inventory-file is deprecated
                  type: string
                  format: inventory
                  x-options:
                    filters:
                      plugin: POLEMARCH_DB,ANSIBLE_FILE,ANSIBLE_STRING
                limit:
                  title: Limit
                  description: further limit selected hosts to an additional pattern
                  type: string
                list_hosts:
                  title: List hosts
                  description: outputs a list of matching hosts; does not execute
                    anything else
                  type: boolean
                one_line:
                  title: One line
                  description: condense output
                  type: boolean
                playbook_dir:
                  title: Playbook dir
                  description: Since this tool does not use playbooks, use this as
                    a substitute playbook directory.This sets the relative path for
                    many features including roles/ group_vars/ etc.
                  type: string
                poll:
                  title: Poll
                  description: set the poll interval if using -B (default=15)
                  type: integer
                private_key:
                  title: Private key
                  description: use this file to authenticate the connection
                  type: string
                  format: secretfile
                  minLength: 1
                  x-options:
                    media_types:
                    - '*/*'
                scp_extra_args:
                  title: Scp extra args
                  description: specify extra arguments to pass to scp only (e.g. -l)
                  type: string
                sftp_extra_args:
                  title: Sftp extra args
                  description: specify extra arguments to pass to sftp only (e.g.
                    -f, -l)
                  type: string
                ssh_common_args:
                  title: Ssh common args
                  description: specify common arguments to pass to sftp/scp/ssh (e.g.
                    ProxyCommand)
                  type: string
                ssh_extra_args:
                  title: Ssh extra args
                  description: specify extra arguments to pass to ssh only (e.g. -R)
                  type: string
                syntax_check:
                  title: Syntax check
                  description: perform a syntax check on the playbook, but do not
                    execute it
                  type: boolean
                timeout:
                  title: Timeout
                  description: override the connection timeout in seconds (default=10)
                  type: integer
                tree:
                  title: Tree
                  description: log output to this directory
                  type: string
                user:
                  title: User
                  description: connect as this user (default=None)
                  type: string
                vault_password_file:
                  title: Vault password file
                  description: vault password file
                  type: string
                  format: secretfile
                  minLength: 1
                  x-options:
                    media_types:
                    - '*/*'
                verbose:
                  title: Verbose
                  description: verbose mode (-vvv for more, -vvvv to enable connection
                    debugging)
                  type: integer
                  maximum: 4
                  minimum: 0
                group:
                  title: Group
                  type: string
                  default: all
              x-properties-groups:
                '':
                - module
                - args
                - background
                - become
                - become_method
                - check
                - connection
                - diff
                - extra_vars
                - forks
                - inventory
                - limit
                - list_hosts
                - one_line
                - playbook_dir
                - poll
                - private_key
                - scp_extra_args
                - sftp_extra_args
                - ssh_common_args
                - ssh_extra_args
                - syntax_check
                - timeout
                - tree
                - user
                - vault_password_file
                - verbose
                - group
              x-view-field-name: args
              x-hide-not-required: true
    x-properties-groups:
      '':
      - id
      - name
      - plugin
      - arguments
    x-view-field-name: name
  OneExecutionTemplate:
    required:
    - name
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 255
        minLength: 1
      notes:
        title: Notes
        type: string
        format: textarea
      plugin:
        title: Plugin
        type: string
        readOnly: true
        minLength: 1
    x-properties-groups:
      '':
      - id
      - name
      - notes
      - plugin
    x-view-field-name: name
  ExecuteTemplate:
    required:
    - option
    type: object
    properties:
      option:
        title: Option
        type: integer
        format: fk
        x-options:
          model:
            $ref: '#/definitions/ExecutionTemplateOption'
          value_field: id
          view_field: name
          usePrefetch: true
          makeLink: true
          dependence: null
          filters: null
    x-properties-groups:
      '':
      - option
    x-view-field-name: option
  ExecuteTemplateResponse:
    type: object
    properties:
      detail:
        title: Detail
        type: string
        readOnly: true
        minLength: 1
      history_id:
        title: History id
        type: integer
        readOnly: true
        x-options:
          redirect:
            operation_name: project_execution_templates_history
            depend_field: null
            concat_field_name: false
        x-nullable: true
      executor:
        title: Executor
        type: integer
        format: fk
        readOnly: true
        x-options:
          model:
            $ref: '#/definitions/User'
          value_field: id
          view_field: name
          usePrefetch: true
          makeLink: true
          dependence: null
          filters: null
        x-nullable: true
    x-properties-groups:
      '':
      - detail
      - history_id
      - executor
    x-view-field-name: history_id
  ExecutionTemplateOption:
    required:
    - name
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
      name:
        title: Name
        type: string
        maxLength: 255
        minLength: 1
    x-properties-groups:
      '':
      - id
      - name
    x-view-field-name: name
  OneExecutionTemplateOption:
    required:
    - name
    - arguments
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 255
        minLength: 1
      notes:
        title: Notes
        type: string
        format: textarea
      arguments:
        title: Arguments
        type: string
        format: dynamic
        x-options:
          field: plugin
          source_view: /project/{id}/execution_templates/{execution_templates_id}/
          choices: {}
          types:
            ANSIBLE_PLAYBOOK:
              required:
              - playbook
              type: object
              properties:
                playbook:
                  title: Playbook
                  type: string
                  format: fk_autocomplete
                  minLength: 1
                  x-options:
                    model:
                      $ref: '#/definitions/AnsiblePlaybook'
                    value_field: playbook
                    view_field: playbook
                    usePrefetch: true
                args:
                  title: Args
                  description: Playbook(s)
                  type: string
                become:
                  title: Become
                  description: run operations with become (does not imply password
                    prompting)
                  type: boolean
                become_method:
                  title: Become method
                  description: privilege escalation method to use (default=sudo),
                    use `ansible-doc -t become -l` to list valid choices.
                  type: string
                check:
                  title: Check
                  description: don't make any changes; instead, try to predict some
                    of the changes that may occur
                  type: boolean
                connection:
                  title: Connection
                  description: connection type to use (default=smart)
                  type: string
                diff:
                  title: Diff
                  description: when changing (small) files and templates, show the
                    differences in those files; works great with --check
                  type: boolean
                extra_vars:
                  title: Extra vars
                  description: set additional variables as key=value or YAML/JSON,
                    if filename prepend with @
                  type: string
                flush_cache:
                  title: Flush cache
                  description: clear the fact cache for every host in inventory
                  type: boolean
                force_handlers:
                  title: Force handlers
                  description: run handlers even if a task fails
                  type: boolean
                forks:
                  title: Forks
                  description: specify number of parallel processes to use (default=5)
                  type: integer
                inventory:
                  title: Inventory
                  description: specify inventory host path or comma separated host
                    list. --inventory-file is deprecated
                  type: string
                  format: inventory
                  x-options:
                    filters:
                      plugin: POLEMARCH_DB,ANSIBLE_FILE,ANSIBLE_STRING
                limit:
                  title: Limit
                  description: further limit selected hosts to an additional pattern
                  type: string
                list_hosts:
                  title: List hosts
                  description: outputs a list of matching hosts; does not execute
                    anything else
                  type: boolean
                list_tags:
                  title: List tags
                  description: list all available tags
                  type: boolean
                list_tasks:
                  title: List tasks
                  description: list all tasks that would be executed
                  type: boolean
                private_key:
                  title: Private key
                  description: use this file to authenticate the connection
                  type: string
                  format: secretfile
                  minLength: 1
                  x-options:
                    media_types:
                    - '*/*'
                scp_extra_args:
                  title: Scp extra args
                  description: specify extra arguments to pass to scp only (e.g. -l)
                  type: string
                sftp_extra_args:
                  title: Sftp extra args
                  description: specify extra arguments to pass to sftp only (e.g.
                    -f, -l)
                  type: string
                skip_tags:
                  title: Skip tags
                  description: only run plays and tasks whose tags do not match these
                    values
                  type: string
                ssh_common_args:
                  title: Ssh common args
                  description: specify common arguments to pass to sftp/scp/ssh (e.g.
                    ProxyCommand)
                  type: string
                ssh_extra_args:
                  title: Ssh extra args
                  description: specify extra arguments to pass to ssh only (e.g. -R)
                  type: string
                start_at_task:
                  title: Start at task
                  description: start the playbook at the task matching this name
                  type: string
                step:
                  title: Step
                  description: 'one-step-at-a-time: confirm each task before running'
                  type: boolean
                syntax_check:
                  title: Syntax check
                  description: perform a syntax check on the playbook, but do not
                    execute it
                  type: boolean
                tags:
                  title: Tags
                  description: only run plays and tasks tagged with these values
                  type: string
                timeout:
                  title: Timeout
                  description: override the connection timeout in seconds (default=10)
                  type: integer
                user:
                  title: User
                  description: connect as this user (default=None)
                  type: string
                vault_password_file:
                  title: Vault password file
                  description: vault password file
                  type: string
                  format: secretfile
                  minLength: 1
                  x-options:
                    media_types:
                    - '*/*'
                verbose:
                  title: Verbose
                  description: verbose mode (-vvv for more, -vvvv to enable connection
                    debugging)
                  type: integer
                  maximum: 4
                  minimum: 0
              x-properties-groups:
                '':
                - playbook
                - args
                - become
                - become_method
                - check
                - connection
                - diff
                - extra_vars
                - flush_cache
                - force_handlers
                - forks
                - inventory
                - limit
                - list_hosts
                - list_tags
                - list_tasks
                - private_key
                - scp_extra_args
                - sftp_extra_args
                - skip_tags
                - ssh_common_args
                - ssh_extra_args
                - start_at_task
                - step
                - syntax_check
                - tags
                - timeout
                - user
                - vault_password_file
                - verbose
              x-view-field-name: args
              x-hide-not-required: true
            ANSIBLE_MODULE:
              required:
              - module
              type: object
              properties:
                module:
                  title: Module
                  type: string
                  format: fk_autocomplete
                  minLength: 1
                  x-options:
                    model:
                      $ref: '#/definitions/AnsibleModule'
                    value_field: path
                    view_field: path
                    usePrefetch: true
                args:
                  title: Args
                  description: host pattern
                  type: string
                background:
                  title: Background
                  description: run asynchronously, failing after X seconds (default=N/A)
                  type: integer
                become:
                  title: Become
                  description: run operations with become (does not imply password
                    prompting)
                  type: boolean
                become_method:
                  title: Become method
                  description: privilege escalation method to use (default=sudo),
                    use `ansible-doc -t become -l` to list valid choices.
                  type: string
                check:
                  title: Check
                  description: don't make any changes; instead, try to predict some
                    of the changes that may occur
                  type: boolean
                connection:
                  title: Connection
                  description: connection type to use (default=smart)
                  type: string
                diff:
                  title: Diff
                  description: when changing (small) files and templates, show the
                    differences in those files; works great with --check
                  type: boolean
                extra_vars:
                  title: Extra vars
                  description: set additional variables as key=value or YAML/JSON,
                    if filename prepend with @
                  type: string
                forks:
                  title: Forks
                  description: specify number of parallel processes to use (default=5)
                  type: integer
                inventory:
                  title: Inventory
                  description: specify inventory host path or comma separated host
                    list. --inventory-file is deprecated
                  type: string
                  format: inventory
                  x-options:
                    filters:
                      plugin: POLEMARCH_DB,ANSIBLE_FILE,ANSIBLE_STRING
                limit:
                  title: Limit
                  description: further limit selected hosts to an additional pattern
                  type: string
                list_hosts:
                  title: List hosts
                  description: outputs a list of matching hosts; does not execute
                    anything else
                  type: boolean
                one_line:
                  title: One line
                  description: condense output
                  type: boolean
                playbook_dir:
                  title: Playbook dir
                  description: Since this tool does not use playbooks, use this as
                    a substitute playbook directory.This sets the relative path for
                    many features including roles/ group_vars/ etc.
                  type: string
                poll:
                  title: Poll
                  description: set the poll interval if using -B (default=15)
                  type: integer
                private_key:
                  title: Private key
                  description: use this file to authenticate the connection
                  type: string
                  format: secretfile
                  minLength: 1
                  x-options:
                    media_types:
                    - '*/*'
                scp_extra_args:
                  title: Scp extra args
                  description: specify extra arguments to pass to scp only (e.g. -l)
                  type: string
                sftp_extra_args:
                  title: Sftp extra args
                  description: specify extra arguments to pass to sftp only (e.g.
                    -f, -l)
                  type: string
                ssh_common_args:
                  title: Ssh common args
                  description: specify common arguments to pass to sftp/scp/ssh (e.g.
                    ProxyCommand)
                  type: string
                ssh_extra_args:
                  title: Ssh extra args
                  description: specify extra arguments to pass to ssh only (e.g. -R)
                  type: string
                syntax_check:
                  title: Syntax check
                  description: perform a syntax check on the playbook, but do not
                    execute it
                  type: boolean
                timeout:
                  title: Timeout
                  description: override the connection timeout in seconds (default=10)
                  type: integer
                tree:
                  title: Tree
                  description: log output to this directory
                  type: string
                user:
                  title: User
                  description: connect as this user (default=None)
                  type: string
                vault_password_file:
                  title: Vault password file
                  description: vault password file
                  type: string
                  format: secretfile
                  minLength: 1
                  x-options:
                    media_types:
                    - '*/*'
                verbose:
                  title: Verbose
                  description: verbose mode (-vvv for more, -vvvv to enable connection
                    debugging)
                  type: integer
                  maximum: 4
                  minimum: 0
                group:
                  title: Group
                  type: string
                  default: all
              x-properties-groups:
                '':
                - module
                - args
                - background
                - become
                - become_method
                - check
                - connection
                - diff
                - extra_vars
                - forks
                - inventory
                - limit
                - list_hosts
                - one_line
                - playbook_dir
                - poll
                - private_key
                - scp_extra_args
                - sftp_extra_args
                - ssh_common_args
                - ssh_extra_args
                - syntax_check
                - timeout
                - tree
                - user
                - vault_password_file
                - verbose
                - group
              x-view-field-name: args
              x-hide-not-required: true
    x-properties-groups:
      '':
      - id
      - name
      - notes
      - arguments
    x-view-field-name: name
  TemplatePeriodicTask:
    required:
    - name
    - schedule
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 255
        minLength: 1
      schedule:
        title: Schedule
        type: string
        format: dynamic
        x-options:
          field: type
          choices: {}
          types:
            INTERVAL:
              type: integer
              format: uptime
            CRONTAB:
              type: string
              format: crontab
              minLength: 1
      enabled:
        title: Enabled
        type: boolean
      save_result:
        title: Save result
        type: boolean
    x-properties-groups:
      '':
      - id
      - name
      - schedule
      - enabled
      - save_result
    x-view-field-name: name
  OneTemplatePeriodicTask:
    required:
    - name
    - type
    - schedule
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 255
        minLength: 1
      type:
        title: Type
        type: string
        enum:
        - INTERVAL
        - CRONTAB
      schedule:
        title: Schedule
        type: string
        format: dynamic
        x-options:
          field: type
          choices: {}
          types:
            INTERVAL:
              type: integer
              format: uptime
            CRONTAB:
              type: string
              format: crontab
              minLength: 1
      enabled:
        title: Enabled
        type: boolean
      save_result:
        title: Save result
        type: boolean
      notes:
        title: Notes
        type: string
        format: textarea
    x-properties-groups:
      '':
      - id
      - name
      - type
      - schedule
      - enabled
      - save_result
      - notes
    x-view-field-name: name
  ProjectImportInventory:
    required:
    - name
    - plugin
    - data
    type: object
    properties:
      inventory_id:
        title: Inventory id
        type: integer
        readOnly: true
        x-options:
          redirect:
            operation_name: project_inventory
            depend_field: null
            concat_field_name: false
      name:
        title: Name
        type: string
        minLength: 1
      plugin:
        title: Plugin
        type: string
        enum:
        - POLEMARCH_DB
        - ANSIBLE_STRING
      data:
        title: Data
        type: string
        format: dynamic
        x-options:
          field: plugin
          choices: {}
          types:
            POLEMARCH_DB:
              required:
              - body
              type: object
              properties:
                body:
                  title: Body
                  type: string
                  format: file
                  minLength: 1
                  x-options:
                    media_types:
                    - '*/*'
              x-properties-groups:
                '':
                - body
              x-view-field-name: body
            ANSIBLE_STRING:
              required:
              - file
              type: object
              properties:
                file:
                  title: File
                  type: object
                  properties:
                    name:
                      type: string
                      x-nullable: true
                    content:
                      type: string
                      x-nullable: true
                    mediaType:
                      type: string
                      x-nullable: true
                  x-format: namedbinfile
                  x-validators: {}
              x-properties-groups:
                '':
                - file
              x-view-field-name: file
    x-properties-groups:
      '':
      - inventory_id
      - name
      - plugin
      - data
    x-view-field-name: name
  ProjectVariable:
    required:
    - key
    - value
    type: object
    properties:
      id:
        title: Id
        type: integer
        readOnly: true
      key:
        title: Key
        type: string
        format: autocomplete
        enum:
        - repo_type
        - repo_sync_on_run
        - repo_sync_on_run_timeout
        - repo_branch
        - repo_password
        - repo_key
        - playbook_path
        - ci_template
        minLength: 1
      value:
        title: Value
        type: string
        format: dynamic
        x-options:
          field: key
          choices: {}
          types:
            repo_branch:
              type: string
              minLength: 1
            repo_password:
              type: string
              format: password
              minLength: 1
            repo_key:
              type: string
              format: secretfile
              minLength: 1
              x-options:
                media_types:
                - '*/*'
            repo_sync_on_run_timeout:
              type: integer
              format: uptime
              default: 0
            repo_sync_on_run:
              type: boolean
            ci_template:
              type: string
              format: fk
              x-options:
                model:
                  $ref: '#/definitions/ProjectTemplateOption'
                value_field: id
                view_field: extended_name
                usePrefetch: true
                makeLink: true
                dependence: null
                filters: null
            repo_type:
              type: string
              enum:
              - MANUAL
              - GIT
              - TAR
    x-properties-groups:
      '':
      - id
      - key
      - value
    x-view-field-name: key
  DayJob:
    required:
    - status
    - sum
    - all
    - day
    type: object
    properties:
      status:
        title: Status
        type: string
        minLength: 1
      sum:
        title: Sum
        type: integer
      all:
        title: All
        type: integer
      day:
        title: Day
        type: string
        format: date-time
    x-properties-groups:
      '':
      - status
      - sum
      - all
      - day
    x-view-field-name: sum
  MonthJob:
    required:
    - status
    - sum
    - all
    - month
    type: object
    properties:
      status:
        title: Status
        type: string
        minLength: 1
      sum:
        title: Sum
        type: integer
      all:
        title: All
        type: integer
      month:
        title: Month
        type: string
        format: date-time
    x-properties-groups:
      '':
      - status
      - sum
      - all
      - month
    x-view-field-name: sum
  YearJob:
    required:
    - status
    - sum
    - all
    - year
    type: object
    properties:
      status:
        title: Status
        type: string
        minLength: 1
      sum:
        title: Sum
        type: integer
      all:
        title: All
        type: integer
      year:
        title: Year
        type: string
        format: date-time
    x-properties-groups:
      '':
      - status
      - sum
      - all
      - year
    x-view-field-name: sum
  StatsJobs:
    required:
    - day
    - month
    - year
    type: object
    properties:
      day:
        title: Day
        type: array
        items:
          $ref: '#/definitions/DayJob'
      month:
        title: Month
        type: array
        items:
          $ref: '#/definitions/MonthJob'
      year:
        title: Year
        type: array
        items:
          $ref: '#/definitions/YearJob'
    x-properties-groups:
      '':
      - day
      - month
      - year
    x-view-field-name: month
  Stats:
    required:
    - projects
    - inventories
    - users
    - execution_plugins
    - inventory_plugins
    - jobs
    type: object
    properties:
      projects:
        title: Projects
        type: integer
      inventories:
        title: Inventories
        type: integer
      users:
        title: Users
        type: integer
      execution_plugins:
        title: Execution plugins
        type: integer
      inventory_plugins:
        title: Inventory plugins
        type: integer
      jobs:
        $ref: '#/definitions/StatsJobs'
    x-properties-groups:
      '':
      - projects
      - inventories
      - users
      - execution_plugins
      - inventory_plugins
      - jobs
    x-view-field-name: inventories
  User:
    required:
    - username
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      username:
        title: Username
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
        type: string
        pattern: ^[\w.@+-]+$
        maxLength: 150
        minLength: 1
      is_active:
        title: Is active
        type: boolean
        default: true
      email:
        title: Email
        type: string
        format: email
        minLength: 1
    x-properties-groups:
      '':
      - id
      - username
      - is_active
      - email
    x-view-field-name: username
  CreateUser:
    required:
    - username
    - password
    - password2
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      username:
        title: Username
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
        type: string
        pattern: ^[\w.@+-]+$
        maxLength: 150
        minLength: 1
      is_active:
        title: Is active
        type: boolean
        default: true
      first_name:
        title: First name
        type: string
        maxLength: 150
      last_name:
        title: Last name
        type: string
        maxLength: 150
      email:
        title: Email
        type: string
        format: email
        minLength: 1
      password:
        title: Password
        type: string
        format: password
        minLength: 1
      password2:
        title: Repeat password
        type: string
        format: password
        minLength: 1
    x-properties-groups:
      '':
      - id
      - username
      - is_active
      - first_name
      - last_name
      - email
      - password
      - password2
    x-view-field-name: username
  OneUser:
    required:
    - username
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      username:
        title: Username
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
        type: string
        pattern: ^[\w.@+-]+$
        maxLength: 150
        minLength: 1
      is_active:
        title: Is active
        type: boolean
        default: true
      first_name:
        title: First name
        type: string
        maxLength: 150
      last_name:
        title: Last name
        type: string
        maxLength: 150
      email:
        title: Email
        type: string
        format: email
        minLength: 1
    x-properties-groups:
      '':
      - id
      - username
      - is_active
      - first_name
      - last_name
      - email
    x-view-field-name: username
  _MainSettings:
    type: object
    properties:
      language:
        title: Language
        type: string
        enum:
        - en
        - ru
        default: en
      dark_mode:
        title: Dark mode
        type: boolean
        default: false
    default:
      language: en
      dark_mode: false
    x-properties-groups:
      '':
      - language
      - dark_mode
    x-view-field-name: dark_mode
  _UserSettings:
    type: object
    properties:
      main:
        $ref: '#/definitions/_MainSettings'
      custom:
        title: Custom
        type: object
        default: {}
        additionalProperties: true
    x-properties-groups:
      '':
      - main
      - custom
    x-view-field-name: custom
  ChangePassword:
    required:
    - old_password
    - password
    - password2
    type: object
    properties:
      old_password:
        title: Old password
        type: string
        format: password
        minLength: 1
      password:
        title: New password
        type: string
        format: password
        minLength: 1
      password2:
        title: Confirm new password
        type: string
        format: password
        minLength: 1
    x-properties-groups:
      '':
      - old_password
      - password
      - password2
    x-view-field-name: password
  TwoFA:
    type: object
    properties:
      enabled:
        title: Enabled
        type: boolean
        readOnly: true
      secret:
        title: Secret
        type: string
        minLength: 1
        x-nullable: true
      pin:
        title: Enter the six-digit code from the application
        type: string
        minLength: 1
      recovery:
        title: Recovery
        type: string
        minLength: 1
    x-properties-groups:
      '':
      - enabled
      - secret
      - pin
      - recovery
    x-view-field-name: secret
